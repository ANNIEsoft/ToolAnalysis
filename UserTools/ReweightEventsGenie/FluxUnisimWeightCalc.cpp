#include "WeightCalcCreator.h"
#include "WeightCalc.h"

#include <iostream>
#include <cstdlib>
#include <stdexcept>
#include "TH1D.h"
#include "TH1F.h"
#include "TFile.h"

#include "CLHEP/Random/JamesRandom.h"
#include "CLHEP/Random/RandGaussQ.h"

namespace evwgh {
  class FluxUnisimWeightCalc : public WeightCalc
  {

  public:
    FluxUnisimWeightCalc();
    double MiniBooNEWeightCalc(double enu, int ptype, int ntype, int uni, bool noNeg);
    double MicroBooNEWeightCalc(double enu, int ptype, int ntype, int uni, bool noNeg);
    void Configure(fluxconfig pset);
    std::vector<std::vector<double> > GetWeight(event & e);
    std::vector< double > MiniBooNERandomNumbers(std::string);


  private:
    CLHEP::RandGaussQ *fGaussRandom;
    std::vector<double> fWeightArray;
    std::vector<std::string> fParameter_list;    
    int fNuni;   // Number of universes you want to generate
    double fScalePos; // Scale factor to enhance or degrade a given positive systematic uncertanity
    double fScaleNeg; // Scale factor to enhance or degrade a given negative systematic uncertanity
    std::string fMode;   // if you want multisim or +/- 1sigma
    std::string fGenieModuleLabel;
    std::string fWeightCalc; // if you want MiniBooNE or MicroBooNE calculator
    double fSeed;
    bool fUseMBRands;

    //Weight Arrays
    // These will contain the systematic variations
    // with these in place we can start to calculate weights
    // these will depend on the parent particle, neutrino flavor, and neutrino energy
    //         ptype: pi, k, k0, mu
    //         |  ntype: numu, numubar, nue, nuebar 
    //         |  |   binnig: 50MeV
    //         |  |   |
    double fCV[4][4][200];
    double fRWpos[4][4][200];
    double fRWneg[4][4][200];

    // This is for when there is only one systematic variation (i.e. skin depth)
    bool PosOnly = false;
       
     DECLARE_WEIGHTCALC(FluxUnisimWeightCalc)
  };

  FluxUnisimWeightCalc::FluxUnisimWeightCalc()
  {

  }

  void FluxUnisimWeightCalc::Configure(fluxconfig pset)
  {
    //Collect the fcl parameters from the fhicl file
    fParameter_list = pset.parameter_list;
    fNuni           = pset.number_of_multisims;
    fScalePos       = pset.scale_factor_pos;
    fScaleNeg       = pset.scale_factor_neg;
    fMode           = pset.mode;
    fWeightCalc     = pset.weight_calculator;
    fSeed           = pset.random_seed;
    fUseMBRands     = pset.use_MiniBooNE_random_numbers;

    // This sets whether we use the MiniBooNE or a modern calculation for the weights  
    if(fWeightCalc != "MicroBooNE" && fWeightCalc != "MiniBooNE"){
      throw std::invalid_argument("::Unknown weight calculator " + fWeightCalc);     
    }

    //fGenieModuleLabel= genie_module_label;
    
    /// Grab the histogram related to the CV
    std::string dataInput1     =   pset.CentralValue_hist_file;

    /// Grab the histogram related to the variation 
    std::string dataInput2pos  =   pset.PositiveSystematicVariation_hist_file;
    std::string dataInput2neg  =   pset.NegativeSystematicVariation_hist_file;

    //
    //  If there is only one file supplied use 
    //     it for both positive and negative
    //
    if(dataInput2pos == dataInput2neg){
      PosOnly = true;
    }

    std::string fw_path   = std::getenv("FW_SEARCH_PATH");
    std::string cvfile    = fw_path + "/" + dataInput1;
    std::string rwfilepos = fw_path + "/" + dataInput2pos;
    std::string rwfileneg = fw_path + "/" + dataInput2neg;


    //Set up the naming convention of the 
    //   histograms that contain all the information we have 
    int ptype[4] = {1,2,3,4}; //mu, pi, k0, k
    int ntype[4] = {1,2,3,4}; //nue, anue, numu, anumu

        // Define the files that store the histograms
    TFile fcv(Form("%s",cvfile.c_str()));
    TFile frwpos(Form("%s", rwfilepos.c_str()));
    TFile frwneg(Form("%s", rwfileneg.c_str()));

    // > Iterate through all the files and extract 
    //       the relevant histograms, bin by bin
    // > The histograms are labled as
    //       'h5'+ptype[]+ntype[] 

    for (int iptyp=0;iptyp<4;iptyp++) {
      for (int intyp=0;intyp<4;intyp++) {
	for (int ibin=0;ibin<200;ibin++) { //Grab events from ibin+1 

	  fCV[iptyp][intyp][ibin]=(dynamic_cast<TH1F*> (fcv.Get(Form("h5%d%d",ptype[iptyp],ntype[intyp]))))->GetBinContent(ibin+1);
	  fRWpos[iptyp][intyp][ibin]=(dynamic_cast<TH1F*> (frwpos.Get(Form("h5%d%d",ptype[iptyp],ntype[intyp]))))->GetBinContent(ibin+1);
	  fRWneg[iptyp][intyp][ibin]=(dynamic_cast<TH1F*> (frwneg.Get(Form("h5%d%d",ptype[iptyp],ntype[intyp]))))->GetBinContent(ibin+1);

	}// energy bin
      }//   type of neutrinos
    }//     type of hadron parent 
    
    fcv.Close();
    frwpos.Close();
    frwneg.Close(); 


    //Setup the random number generator
    CLHEP::HepRandomEngine* rng=new CLHEP::HepJamesRandom();
    rng->setSeed(long(fSeed),0);
    fGaussRandom = new CLHEP::RandGaussQ(rng,0,1);
    
    //
    //   This part is important!!! You want to be sure to use the same random number throughout all the 
    //   events, otherwise you will be smearing over all the correlations. 
    //
    //   While the random number seed it set in the fcl file, you only want to use the same throw PER UNIVERSE
    //
    if(fUseMBRands){//fParameter_list
      fWeightArray = FluxUnisimWeightCalc::MiniBooNERandomNumbers(fParameter_list.at(0));
    }//Use MiniBooNE Randoms
    else{

      fWeightArray.resize(fNuni);
      
      // This sets up if we want to reweight events or just assess 1sigma shifts 
      if (fMode.find("multisim") != std::string::npos )
	for (int i=0;i<fNuni;i++) fWeightArray[i]=fGaussRandom->shoot(rng,0,1.);
      else
	for (int i=0;i<fNuni;i++) fWeightArray[i]=1.;      
    }//Use LArSoft Randoms

  }
  std::vector<std::vector<double> > FluxUnisimWeightCalc::GetWeight(event & e)
  {

    //Create a vector of weights for each neutrino 
    std::vector< std::vector<double> > weight;

    //within art it is possible to have multiple nu interactions in an event, but here it is always 1
    //leaving vector of vectors to minimize the diff in code
    weight.resize(1);
    //Iterate through each neutrino in the event
    for(unsigned int inu = 0; inu < 1; inu++){

      //Resize vector to the number of universes you want to generate
      weight[inu].resize(fNuni);
      
      //containers for the parent and neutrino type information
      int ptype = std::numeric_limits<int>::max(); 
      int ntype = std::numeric_limits<int>::max();
 
     // Discover the neutrino parent type
      //     This contains the neutrino's parentage information
      if (      e.ptype==13  || e.ptype==-13  ) ptype = 0;
      else if ( e.ptype==211 || e.ptype==-211 ) ptype = 1;
      else if ( e.ptype==130                               ) ptype = 2;
      else if ( e.ptype==321 || e.ptype==-321 ) ptype = 3;                                    
      else {
	throw std::invalid_argument("::Unknown ptype "+e.ptype);
      }

      // Discover the neutrino type
      //     This contains the neutrino's flavor information
      if (      e.ntype== 12  ) ntype=0;
      else if ( e.ntype==-12  ) ntype=1;
      else if ( e.ntype== 14  ) ntype=2;
      else if ( e.ntype==-14  ) ntype=3;
      else {
	throw std::invalid_argument("::Unknown ntype " + e.ntype);
      }

      // Collect neutrino energy
      //this should match the location of the input unisim histograms
      double enu=e.nenergyn;      

      //Let's make a weights based on the calculator you have requested 
      if(fMode.find("multisim") != std::string::npos){
	for (int i=0;i<fNuni;i++) {
	  if(fWeightCalc.find("MicroBooNE") != std::string::npos){
	    weight[inu][i]=MicroBooNEWeightCalc(enu, ptype, ntype, i, PosOnly);
	  }
	  if(fWeightCalc.find("MiniBooNE") != std::string::npos){
	    weight[inu][i]=MiniBooNEWeightCalc(enu, ptype, ntype, i, PosOnly);
	  }
	}//Iterate through the number of universes      
      }
    }
    return weight;
  }

  double FluxUnisimWeightCalc::MiniBooNEWeightCalc(double enu, int ptype, int ntype, int uni, bool noNeg)
  {
    // 
    //   This is directly based on the MiniBooNE framework to 
    //   allow us to reproduce their weights before
    //         All this is a reproduction by J. Zennamo in 2017 
    //                      of code written by S. Brice in 2008
    //                                         
    double weight = 1;
    
    int bin = int(enu/0.05); //convert energy (in GeV) into 50 MeV bin


    //  This is based on:
    //    http://cdcvs0.fnal.gov/cgi-bin/public-cvs/cvsweb-public.cgi/~checkout~/...
    //          miniboone/AnalysisFramework/MultisimMatrix/src/MultisimMatrix_initialise.F?rev=1.18;content-type=text%2Fplain
    //
    //  pseudocode:
    //   Scaled Reweighting = ScaleFactor * Reweighting + ( 1 - ScaleFactor) * Central Value
    //
    double scaled_pos = fScalePos*fRWpos[ptype][ntype][bin] + 
      (1-fScalePos)*fCV[ptype][ntype][bin];

    double scaled_neg = fScaleNeg*fRWneg[ptype][ntype][bin] + 
      (1-fScaleNeg)*fCV[ptype][ntype][bin];
    
    // This is based on:
    //    http://cdcvs0.fnal.gov/cgi-bin/public-cvs/cvsweb-public.cgi/~checkout~/...
    //           miniboone/AnalysisFramework/MultisimMatrix/src/MultisimMatrix_getWeight.F?rev=1.41;content-type=text%2Fplain
    //
    //  pseudocode:
    //   Check value of Random Number array [RAND] for this universe [uni] such that:
    //   If RAND[uni] > 0
    //       Weight =  1 + ( RAND[uni] * [ { Scaled Reweighting[pos] / Central Value } - 1 ] )
    //   If RAND[uni] < 0
    //       Weight =  1 - ( RAND[uni] * [ { Scaled Reweighting[neg] / Central Value } - 1 ] )
    //
    //   if there is only one systematic histogram offered sub this:
    //   If RAND[uni] < 0
    //       Weight =  1 - ( RAND[uni] * [ < 2 - { Scaled Reweighting[pos] / Central Value } > - 1 ] )
    //
    
    if(fWeightArray[uni] > 0){      
      double syst = fWeightArray[uni]*((scaled_pos/fCV[ptype][ntype][bin])-1);
      weight = 1 + (syst);
      if(scaled_pos == 0) weight = 1;

    }
    else if(noNeg == true){      
      double syst = fWeightArray[uni]*( (2 - (scaled_pos/fCV[ptype][ntype][bin])) - 1);           
      weight = 1 - (syst);      
      
      if(scaled_pos == 0) weight = 1;

    }
    else{
      double syst = fWeightArray[uni]*((scaled_neg/fCV[ptype][ntype][bin])-1);
      weight = 1 - (syst);    
      if(scaled_neg == 0) weight = 1;

    }

    if(fabs(fCV[ptype][ntype][bin]) < 1.e-12) weight = 1;

    if(weight < 0) weight = 1; 
    if(weight > 30) weight = 30;
    if(!(std::isfinite(weight))) weight = 30;

    if( (ntype == 0 || ntype == 1) && ptype == 1) weight = 1;

    if( (ntype == 1 || ntype == 3) && ptype == 3) weight = 1;

     
    return weight;
  }
  
  double FluxUnisimWeightCalc::MicroBooNEWeightCalc(double enu, int ptype, int ntype, int uni, bool noNeg)
  {

    // 
    //  Largely built off the MiniBooNE code 
    //  but this is intended to expand beyond it
    //
    //  Edits from MiniBooNE code:
    //
    //  JZ (6/2017) : Remove max weight, set to max_limit of a double
    //

    double weight = 1;
    
    int bin = int(enu/0.05); //convert energy (in GeV) into 50 MeV bin


    //  This is based on:
    //    http://cdcvs0.fnal.gov/cgi-bin/public-cvs/cvsweb-public.cgi/~checkout~/...
    //          miniboone/AnalysisFramework/MultisimMatrix/src/MultisimMatrix_initialise.F?rev=1.18;content-type=text%2Fplain
    //
    //  pseudocode:
    //   Scaled Reweighting = ScaleFactor * Reweighting + ( 1 - ScaleFactor) * Central Value
    //
    double scaled_pos = fScalePos*fRWpos[ptype][ntype][bin] + 
      (1-fScalePos)*fCV[ptype][ntype][bin];
    double scaled_neg = fScaleNeg*fRWneg[ptype][ntype][bin] + 
      (1-fScaleNeg)*fCV[ptype][ntype][bin];
    
    // This is based on:
    //    http://cdcvs0.fnal.gov/cgi-bin/public-cvs/cvsweb-public.cgi/~checkout~/...
    //           miniboone/AnalysisFramework/MultisimMatrix/src/MultisimMatrix_getWeight.F?rev=1.41;content-type=text%2Fplain
    //
    //  pseudocode:
    //   Check value of Random Number array [RAND] for this universe [uni] such that:
    //   If RAND[uni] > 0
    //       Weight =  1 + ( RAND[uni] * [ { Scaled Reweighting[pos] / Central Value } - 1 ] )
    //   If RAND[uni] < 0
    //       Weight =  1 - ( RAND[uni] * [ { Scaled Reweighting[neg] / Central Value } - 1 ] )
    //
    //   if there is only one systematic histogram offered sub this:
    //   If RAND[uni] < 0
    //       Weight =  1 - ( RAND[uni] * [ < 2 - { Scaled Reweighting[pos] / Central Value } > - 1 ] )
    //
    
    if(fWeightArray[uni] > 0){      
      double syst = fWeightArray[uni]*((scaled_pos/fCV[ptype][ntype][bin])-1);
      weight = 1 + (syst);
      if(scaled_pos == 0) weight = 1;
    }
    else if(noNeg == true){      
      double syst = fWeightArray[uni]*( (2 - (scaled_pos/fCV[ptype][ntype][bin])) - 1);           
      weight = 1 - (syst);      
      if(scaled_pos == 0) weight = 1;

    }
    else{
      double syst = fWeightArray[uni]*((scaled_neg/fCV[ptype][ntype][bin])-1);
      weight = 1 - (syst);    
      if(scaled_neg == 0) weight = 1;
    }

    if(fabs(fCV[ptype][ntype][bin]) < 1.e-12) weight = 1;

    if(weight < 0) weight = 1;
    if(weight > 30) weight = 30; 
    if(!(std::isfinite(weight))){
      std::cout << "UniSim " <<  fParameter_list.at(0) << " : Failed to get a finite weight" << std::endl;      
      weight = 30;}

    if( (ntype == 0 || ntype == 1) && ptype == 1) weight = 1;
    if( (ntype == 1 || ntype == 3) && ptype == 3) weight = 1;
    return weight;

  }

  std::vector< double > FluxUnisimWeightCalc::MiniBooNERandomNumbers(std::string pdg){

    if(pdg.compare("horncurrent") == 0){	 
      return { 0.917,-0.627,-1.063,-2.551, 0.852,-0.411, 1.195,-1.680,-0.237, 0.836,-0.230, 0.089, 0.396,-0.473, 0.148,-0.121,-0.072, 0.587,-0.029,-0.203, 0.317,-1.069, 1.840, 0.796, 2.122, 1.295,-0.942,-0.284, 1.042, 0.014,-1.562,-0.001,-1.332, 1.215, 0.723, 1.495, 0.317,-0.088, 0.568, 1.185,-1.879, 0.511, 0.025,-0.015, 1.593,-1.718,-0.810, 0.119, 2.308, 1.285,-0.135,-0.817,-2.171,-0.537,-0.309,-0.584, 0.884, 0.996, 1.563,-0.172, 0.238, 0.282, 0.718,-0.399,-1.113, 1.375,-0.115,-0.205, 0.237,-2.850, 0.847, 2.145, 0.783,-1.017,-0.755,-0.388,-0.031, 0.004, 0.613,-0.069, 0.139,-0.097,-0.703,-0.088,-2.200,-0.514,-0.187,-0.197, 1.117, 1.120, 0.940, 0.117,-1.609,-0.496,-0.213, 0.068, 0.740, 0.250,-1.121, 1.539,-0.277, 0.700,-0.994,-0.205,-0.737, 0.349,-0.379, 0.200, 0.241, 1.585,-1.771,-0.919,-0.823, 1.095,-0.261, 0.158, 0.219,-0.368, 1.625,-0.729, 0.332, 0.675,-1.099, 0.913,-0.921,-0.438, 0.937,-0.834, 0.892, 1.588, 0.671,-1.331,-0.866,-0.430, 3.069,-0.488,-0.776,-0.619,-0.087,-0.843,-1.223,-0.297, 1.683,-1.136, 0.663, 0.609, 1.339,-0.077,-0.474, 2.869, 1.052, 0.429,-1.922, 0.482,-1.310,-0.983,-0.905, 1.320,-0.739, 0.929, 1.007, 1.606, 0.533,-0.618,-0.186, 1.877, 1.037,-1.525,-0.469,-0.246,-0.263,-0.212,-0.107, 0.065,-0.683,-0.578,-1.257, 0.317, 0.431, 0.602,-1.644, 0.018,-0.235, 0.312,-1.481, 0.144, 0.348, 0.296, 0.415,-0.413, 0.457, 0.826, 1.157, 0.318,-0.443, 0.680,-0.101,-0.192,-0.130,-2.096,-0.587,-0.316,-0.250,-0.806,-1.336,-1.562, 1.119,-0.734,-2.522,-0.037, 2.461,-0.025, 0.770,-0.834, 0.946, 1.307, 0.071,-0.273,-0.312,-1.191, 1.024, 1.111,-0.455, 1.954, 1.161,-1.778, 0.267,-0.916, 0.888,-0.741, 1.270, 1.377, 1.382, 1.653, 0.694,-1.454,-0.314, 0.176, 0.478,-1.000, 0.028, 0.539, 0.357,-0.249,-1.505, 0.585, 1.316, 0.012, 0.249, 0.722,-0.431, 1.303, 1.602, 0.418, 1.273,-0.318, 1.487,-0.768,-1.660, 0.357,-1.405, 0.000, 0.463,-1.230,-0.886, 0.415,-1.863, 2.352,-0.573, 0.134, 0.152,-0.064,-1.708, 0.317,-0.649, 2.096, 0.339,-0.873, 0.792, 0.265,-1.314, 1.233,-1.153, 1.387, 0.226,-0.007,-0.642, 0.587, 0.526, 0.338,-0.531, 0.358, 0.500,-0.237,-0.527,-1.401,-1.581, 0.865,-0.202, 2.004,-0.400,-0.759,-1.482, 1.779,-0.462,-0.091,-1.151, 0.859,-0.904,-1.043, 1.744,-0.003,-1.167, 0.170,-0.072,-0.200, 1.687, 0.813, 0.241, 0.062,-1.065, 1.724,-1.080,-0.125,-1.626,-0.236, 1.155, 0.198, 0.794,-0.852,-0.609, 0.727, 0.007, 1.549, 0.968, 0.196,-2.107,-0.023,-0.261,-1.076,-0.337, 0.959,-0.153,-1.614, 0.127, 0.733,-1.460,-0.214,-0.038, 0.533, 0.998,-1.077,-0.870, 0.269, 0.736, 0.877, 2.292,-0.163,-2.189, 0.323,-0.002, 2.565,-1.018, 0.076, 0.172, 0.072,-0.366,-0.897,-0.001,-0.052, 0.602,-0.839, 0.533,-0.059,-2.057,-0.025,-1.099, 0.889,-0.604, 1.914,-0.281, 0.274, 0.397,-0.180,-0.332, 1.117, 0.043, 0.845, 1.315,-0.632, 1.072, 0.506,-1.694, 2.088, 0.451,-0.415,-0.014,-0.492, 1.737, 1.195,-0.379, 0.263,-1.314,-0.451,-1.224, 0.301,-0.664,-0.345,-1.039, 0.764,-1.597,-0.004,-1.075, 0.155,-0.303, 0.342, 0.881, 0.495,-0.844,-0.640, 1.138, 1.095,-0.278, 0.120, 1.565, 1.426,-0.576, 0.048, 0.517,-1.381,-1.263,-0.132,-1.091, 0.676, 0.003,-0.894, 1.051, 0.675,-0.168,-0.203, 0.211,-0.827, 1.778, 0.665,-0.280,-1.387,-0.524, 0.021,-1.312, 1.030, 1.082,-1.165,-0.593, 1.941,-0.559,-0.413, 0.800, 0.064, 0.673,-0.511, 1.069,-0.547, 0.795,-0.324,-1.689, 0.921, 2.052,-0.238,-0.334,-1.116, 1.660, 0.859,-0.899, 0.243, 0.987, 0.429, 0.318,-0.514,-0.643, 0.398,-0.628, 0.603, 1.688,-0.642,-0.982, 0.401,-0.064,-0.133,-1.907, 0.262,-2.582,-0.672,-2.038, 1.161,-1.330, 0.887, 1.887,-1.931,-0.245, 1.027, 0.341, 1.427,-0.335,-0.375,-2.336,-0.641, 0.688, 0.013, 2.318,-0.667, 1.694,-1.120,-1.412, 0.151,-0.695, 0.513, 1.881, 2.946, 1.520,-0.719,-1.596,-0.351, 0.107,-0.046,-0.556,-0.070,-0.561, 1.041,-0.390,-1.709, 1.245,-1.270, 0.072,-0.709, 0.151, 1.788, 1.086,-1.033, 0.835, 0.869, 1.492,-1.149,-1.762,-1.918, 0.626,-1.098, 1.069,-0.550, 0.945, 0.382,-0.083, 0.013,-2.224,-0.057,-0.982, 0.746,-0.420, 0.216, 0.835,-0.323,-0.349,-0.181,-0.066, 0.686,-0.616, 1.176,-0.629,-0.567, 1.052,-0.574,-0.305, 1.386,-0.500,-0.573,-0.119,-1.334, 0.363, 0.315,-0.396,-0.826,-2.355,-0.321,-0.671,-0.114,-0.738, 0.033, 0.052, 0.930,-1.678,-0.186,-0.325, 1.197, 0.013,-0.867,-1.538,-0.674, 0.642,-0.408,-1.094, 1.342, 0.073, 0.891, 1.074,-0.671,-0.200,-1.455, 1.083, 0.553, 0.059, 0.441, 1.191,-0.434, 1.082,-0.909, 0.009,-0.817, 1.196, 1.859,-1.304,-0.464, 1.269, 1.777,-2.900, 0.308,-0.218, 0.741, 1.610,-0.274,-0.508,-0.678, 1.708, 0.302, 1.119,-1.315,-1.236,-1.041, 0.245, 0.078,-1.159,-1.607, 1.772,-0.733,-0.942,-0.134, 0.144,-0.508, 0.731,-1.380, 2.124, 0.432, 0.036,-0.392,-0.991, 0.066,-0.932, 0.054, 0.465,-0.180,-1.167, 1.918, 0.290,-0.321, 0.123, 0.901,-0.417,-0.073, 0.465,-0.510,-0.394, 1.201, 2.550, 0.307, 1.729,-0.541,-0.518,-0.514, 1.571,-0.263, 1.266,-1.676,-0.413, 1.918, 1.541, 0.225,-1.729, 0.118, 0.339, 0.143,-0.851,-0.518, 0.492, 0.233, 0.035, 0.303,-0.588,-1.295, 0.366,-0.040, 0.363, 0.038,-1.510,-0.797,-0.200, 0.267, 0.314, 0.157,-0.881, 0.138, 0.649,-0.509,-0.759,-2.041,-2.262,-0.417, 0.746, 0.171, 1.596,-0.243,-1.248,-0.463,-1.664,-1.110,-0.857,-1.309,-0.937,-1.397,-0.066, 2.695, 0.378, 0.323,-0.108,-1.824,-1.548,-0.904, 0.078, 0.694, 0.196,-0.666, 0.225,-0.357, 0.970, 0.303,-0.264,-0.965, 0.035, 0.870, 0.262,-1.185, 1.489,-0.790,-0.258, 0.665,-0.603, 1.242, 0.361, 0.849, 2.465,-1.629, 0.934,-0.069,-1.369,-0.331, 0.871, 0.489, 0.901,-0.322,-0.336, 1.047,-1.169,-1.441,-1.072, 0.805, 0.358,-0.274,-0.001,-0.637, 0.257, 1.012,-0.165, 0.513,-0.079,-1.315, 1.572, 2.037,-0.540,-0.817, 1.617, 0.554, 0.481, 0.079, 1.147,-1.636, 0.513, 0.326,-0.546,-2.495, 1.796,-0.410, 0.347, 0.658, 0.859, 0.571,-1.011,-0.694, 1.737,-0.728, 1.579,-0.280, 1.442,-0.648,-1.024,-0.517, 0.189, 0.902, 0.593,-1.142,-1.510,-1.526, 0.295,-0.390, 1.199, 1.189,-0.208,-0.179, 0.093,-0.250, 1.007,-0.620,-0.427, 1.354,-0.100,-0.234,-2.127,-0.001,-0.725,-1.121,-0.922,-1.569, 0.280, 0.665,-0.331,-0.900, 0.927,-0.332, 0.922,-1.338, 0.063,-2.227,-0.764,-1.183,-0.190,-2.529, 2.425,-0.513,-0.404, 0.157,-1.303,-0.122, 0.590,-1.140,-0.783, 0.857,-0.784,-1.475, 0.655,-0.185,-0.581,-1.396,-1.041,-0.317, 0.026,-0.015,-0.396, 1.379, 0.408,-0.385,-0.651, 0.618, 0.205, 0.759, 0.088,-1.299,-0.703,-0.226,-0.419,-0.068,-0.427, 0.238, 0.418, 0.328, 1.092,-0.833, 1.019, 1.950,-0.180,-0.843,-2.290,-1.567, 0.759, 1.314,-1.791, 2.047,-0.094, 0.156, 2.130,-0.399, 2.063,-1.338,-1.824, 0.840, 0.058, 0.555, 0.700,-1.119, 0.425, 0.679, 0.468, 0.199,-1.338, 0.545,-1.875, 1.226,-0.744,-0.590, 1.157, 0.311,-0.148,-0.321,-0.501, 0.531, 0.280,-0.267, 0.339,-2.703, 0.855,-0.395,-2.420,-0.263, 1.029,-1.710,-0.493, 0.203, 0.246, 0.992,-0.562,-0.077, 1.767, 0.564, 1.088,-0.939, 1.144, 0.052,-0.339,-0.531, 0.627, 0.556,-0.145, 0.637, 1.360,-0.255, 1.144, 0.928, 1.049, 0.358,-0.471, 0.433,-0.119,-0.613,-0.264,-0.783,-0.179,-0.922, 1.085,-1.248,-0.189,-0.385,-1.096, 1.080,-0.576,-0.777,-0.071, 1.003, 0.700,-2.711,-0.122,-0.382, 1.118, 0.495, 1.162,-1.801, 1.504, 0.843, 1.966,-1.244,-0.694, 0.731, 0.156, 1.330,-1.098, 0.080};
    }
    else if(pdg.compare("pioninexsec") == 0){	 
      return {2.014,-1.391,-0.433,-0.750, 1.559, 1.396,-0.335, 0.014,-1.027, 0.636,-0.909, 0.048, 0.762,-1.439, 2.201,-0.372,-0.181, 0.599, 0.304, 0.462, 0.230,-0.612, 1.388, 0.376,-0.391,-0.306,-0.622, 0.334,-1.375, 0.619, 1.195,-0.629,-1.404, 1.871,-0.172, 0.142,-1.642,-0.526, 0.745, 0.515, 1.365,-0.001,-0.645, 0.186, 0.097, 1.509,-2.459, 0.649,-1.447, 1.461, 0.969, 1.422,-1.097, 0.830,-2.249, 1.387,-1.186, 0.914, 1.918, 0.389, 0.108,-0.266,-1.916,-2.277, 1.579,-1.382,-1.451, 0.736,-0.601, 1.341, 0.651, 2.351,-0.359, 0.387, 1.545, 0.037, 1.498, 1.577, 0.811, 0.173,-1.307, 0.405,-0.324, 0.336, 1.000, 0.169,-0.556,-0.260,-0.745, 0.661, 1.359, 0.010,-1.572,-0.937, 0.062,-0.886, 1.432, 0.492, 0.374,-0.265, 0.332,-0.262, 1.927,-0.116,-3.675,-0.363, 0.828,-2.310,-1.640,-0.061, 0.003,-1.687,-0.734,-0.269, 1.089, 1.467,-0.593,-0.374,-0.924,-0.947, 0.632, 1.574,-1.181, 0.770, 0.884,-0.058,-0.175, 0.132, 2.244, 1.481, 0.746,-1.419, 0.154,-2.019,-1.752,-0.346,-0.926,-0.476,-0.306, 1.547,-0.318,-0.474, 1.592, 1.727, 2.039,-0.977,-0.435, 0.743,-1.079,-0.935,-0.384,-0.232, 2.485,-0.528,-1.199,-1.218, 0.803, 1.732, 0.890, 0.259, 1.477, 0.601,-0.758, 1.103,-0.431, 0.077,-1.457, 1.075, 0.526, 0.538,-0.512,-0.983, 0.954,-2.070,-0.822,-0.792,-0.675,-0.623,-0.474, 1.221, 2.425, 0.778, 0.111,-0.755, 1.837,-0.935,-0.018,-1.013,-0.605, 0.032,-0.485,-0.623, 0.520, 0.126, 1.524, 0.630, 1.525,-1.640,-0.532, 0.454,-1.936, 0.265,-1.822, 0.455,-1.630, 0.130, 1.033,-0.820,-1.050, 0.854, 2.536,-0.806, 0.324,-0.321,-0.408, 1.054,-0.074, 0.733,-0.071, 1.521, 0.762,-0.945, 0.037, 0.464,-0.455,-1.775,-1.913,-0.027,-0.823, 1.145,-0.678, 0.231,-0.315,-0.921, 1.077, 3.140, 0.735,-0.342,-0.120,-1.204,-1.268,-0.077, 1.520,-1.290,-1.395,-1.732, 0.990,-0.187,-0.446, 0.594,-0.267, 0.325,-0.041, 0.236, 0.336,-0.779, 0.475,-0.672, 1.189, 0.156, 0.047, 0.612,-0.469,-0.789, 1.602,-0.564,-0.827,-1.382,-0.701,-0.180,-0.308, 0.133,-0.398,-0.176, 0.117,-0.894, 0.210,-0.297,-1.835, 0.271,-0.288, 1.576, 0.327,-0.451, 0.954,-1.133,-1.848, 0.380, 1.629, 0.373,-0.143, 0.652, 0.528,-1.532,-0.023, 2.150, 0.767, 0.017,-1.868, 0.091, 0.546, 0.286, 0.623,-0.253, 0.260, 1.808, 0.595,-0.463, 0.268,-0.101, 1.221,-0.167,-0.917, 0.701,-0.629,-0.833,-1.733, 0.247, 1.016, 0.547,-0.359, 0.399, 1.891,-1.534,-1.260,-0.680, 0.658,-1.130, 1.204, 0.731, 1.022,-0.958, 0.398, 1.048, 2.526,-0.492,-0.633, 0.118,-0.638, 1.118, 0.672,-0.048, 0.970,-0.045,-1.276,-0.053,-0.681,-1.477, 1.300,-0.252,-0.308,-0.608, 1.452, 0.559,-0.650, 0.664,-0.783, 0.309,-0.609,-2.320, 0.339, 0.660, 0.443,-0.828,-0.239,-0.445,-1.936,-0.831,-1.613,-1.981,-1.974, 1.684,-0.547,-0.036,-0.007, 0.406, 0.062, 0.161,-1.353, 0.220, 0.902,-1.650, 0.597,-0.969, 0.446, 1.179,-1.022,-0.488, 1.659, 0.356, 0.853,-0.982,-1.157, 0.525, 0.874, 1.067,-1.399,-1.855, 0.997,-1.394, 2.031,-0.751, 1.003,-0.497, 0.450, 0.461, 0.175,-1.043, 0.737, 0.219,-1.139,-0.027,-0.310,-0.593,-0.382,-1.562,-1.198, 0.205, 0.601, 0.338,-1.597,-0.326,-0.836, 1.213, 1.354, 1.558,-0.297,-0.318,-0.433, 0.922,-0.798, 0.740,-0.167,-0.414,-1.148, 0.109, 1.803,-0.136,-0.302, 3.549, 1.401, 0.126,-0.959,-0.461,-0.798, 1.022, 1.030, 0.524, 0.169,-1.783, 0.267,-1.188,-1.348, 1.416, 0.369, 0.581,-1.098,-0.598,-1.153, 0.129,-0.340,-2.268, 0.212,-0.127,-0.342, 1.338,-0.640, 0.015,-0.452,-0.200,-0.654, 0.680, 0.470, 1.555,-0.126, 0.095, 0.273, 1.183, 1.159, 1.958,-0.099, 0.343,-1.366, 0.112,-1.195, 0.793, 0.500,-0.171, 0.777, 0.643,-1.513,-0.796, 0.498, 0.275, 0.218,-1.018, 0.951, 1.281,-1.026,-0.214, 0.707,-0.734,-0.492, 1.561,-1.131, 1.623, 0.790, 0.360,-0.569, 1.165, 0.373,-0.812,-0.846, 1.716,-1.949,-0.927, 0.697, 0.226, 0.673, 0.148,-0.254,-1.667,-1.453,-0.310,-0.318,-0.149,-1.920, 1.835,-0.413,-0.791,-1.822, 0.829, 3.314, 0.263,-1.081, 1.349,-0.850, 0.223, 0.606,-0.535,-0.133, 0.818, 0.501,-0.242, 0.631,-1.631,-0.132, 0.974,-0.844, 0.277,-1.493,-2.470, 0.497, 0.907, 0.086, 2.117,-1.719, 0.465, 1.433, 0.956, 1.151, 0.624, 0.571,-0.189,-0.484, 0.637, 1.057,-0.006,-0.021, 0.146, 2.328, 0.441,-0.442, 0.604,-0.682, 0.319, 0.008,-1.000,-0.333,-1.326,-1.038,-0.433, 0.668, 0.708, 1.312,-0.957, 1.970,-0.467, 0.607,-0.617,-0.730,-0.038, 2.250,-0.414,-0.135,-0.258, 0.089, 0.071, 1.955,-1.913, 2.812,-0.294, 1.214,-0.318,-0.087,-0.523, 0.294,-0.945,-1.213, 0.770, 0.493, 0.390, 0.582,-1.205,-1.083, 0.660,-0.010, 0.340,-0.907,-1.758,-1.403,-1.805, 1.046,-0.327, 0.269, 0.711,-1.372, 1.442,-0.517, 0.747, 1.251,-1.274,-1.332,-0.038,-0.216, 1.233,-0.297, 0.908,-0.399, 2.540,-0.524, 1.228, 1.125, 0.638, 0.056,-0.542, 0.037, 0.160,-0.140,-0.401, 0.568,-0.082,-1.127, 1.167, 0.159, 0.515, 0.518,-0.214, 1.591,-2.199,-0.378, 0.166,-0.833,-0.573, 0.887,-0.574,-1.172,-0.034,-0.295,-1.147, 1.383,-1.143,-1.441, 0.612,-0.905, 1.015,-0.710, 0.791, 0.707, 0.322,-0.216, 0.149, 1.544,-0.741,-0.272,-2.282,-0.209,-0.078, 2.369, 0.728,-0.199, 0.784,-0.074,-0.078,-0.681, 1.078, 0.473,-0.901, 0.946,-1.661, 0.582, 0.114,-0.780, 1.372,-0.986,-0.365,-0.043, 0.309, 0.043,-0.832, 0.768,-1.567, 0.812,-0.013,-0.357, 0.094,-0.732,-0.118,-0.342,-1.136, 0.029, 1.511,-0.197, 0.254,-0.009,-2.114,-0.992,-1.377, 0.999, 1.548,-0.795,-1.276,-0.311, 1.575,-0.022,-0.237,-0.500,-0.198, 0.217, 0.296, 0.771, 0.407, 0.161,-2.170,-1.144, 0.226,-0.561, 0.961, 0.899, 0.748, 0.602,-0.367,-0.567,-2.072, 0.985,-0.703, 0.444, 1.332,-0.401,-0.113, 1.551,-0.161,-0.363, 0.741,-0.747,-0.674,-0.238, 1.484, 0.177,-0.760, 0.759,-0.341, 0.468, 1.359,-1.829, 0.232,-0.654, 1.890,-0.981,-0.880,-0.073, 0.562, 0.098,-2.349, 0.783,-1.736,-0.335, 1.514, 0.838, 0.384, 0.937, 0.371, 1.776,-1.648, 1.754,-2.192,-0.221,-0.723,-1.791,-0.357, 0.683,-0.220, 1.503,-0.920,-1.667, 3.044,-0.237,-0.091, 0.895, 0.155,-0.210,-0.762,-0.394,-0.676,-0.184, 1.903,-0.858,-0.748,-1.068, 0.033, 0.952, 1.168,-2.734,-0.611, 1.826, 0.401,-1.853,-0.099, 0.827,-0.242,-0.714,-1.590,-1.470,-0.061, 0.495, 0.890,-0.228,-0.586, 1.367,-0.745,-0.634, 0.053, 1.167, 1.395, 1.375,-0.161,-0.834,-0.725,-0.215,-0.471,-0.987, 0.814,-1.058, 1.168,-0.169, 0.586, 0.266,-0.689, 0.103, 0.596,-1.071,-2.045,-0.813,-0.055, 0.505,-0.540, 0.613,-1.733,-1.876,-0.859, 0.514, 0.793,-1.081,-0.109,-0.958,-1.109,-0.332,-1.088, 0.129, 2.091,-1.878, 0.088, 1.443,-0.409,-0.584,-0.421,-0.491, 0.944, 0.386, 0.650, 1.118,-0.093,-0.626, 0.242, 1.896,-0.308,-0.306,-0.629, 0.773,-0.597, 0.698,-0.382, 1.068,-1.199, 2.321,-0.746, 0.664,-1.534, 0.088, 1.202, 0.956, 0.001,-0.151, 0.819, 0.860, 1.036, 2.809, 0.424, 0.519, 0.837, 0.257, 1.657,-0.698,-0.743,-0.017,-0.951, 0.602, 0.144, 0.424,-0.439, 0.869,-1.542, 0.215, 0.482,-0.504, 0.232, 1.321, 1.251,-0.426, 1.663, 1.470,-1.132,-1.253,-0.597, 0.301,-0.127,-0.757,-0.646, 0.329,-1.078, 0.121, 0.352, 2.389,-0.298,-0.568, 1.569, 0.746,-1.306, 0.937, 0.043, 2.376, 0.375, 1.382, 0.361,-0.157, 0.761, 0.905,-0.235, 0.058,-0.297, 1.195,-0.587,-1.956, 0.854,-1.240, 0.031,-0.921, 0.818, 0.497, 1.155, 0.071, 1.452, 0.224, 0.992,-1.377, 0.388,-0.077, 1.250,-0.364,-0.114,-0.082,-0.141, 0.757,-1.960,-0.053,-1.688, 1.215,-0.485,-1.265, 0.021};
    }
    else if(pdg.compare("nucleontotxsec") == 0){	 
      return {0.493,-0.887, 0.746, 1.051,-0.937, 0.369,-0.144,-0.215, 0.609,-1.280, 0.556,-0.740,-1.636,-0.118,-0.314,-0.474, 0.184, 1.257, 1.889, 0.503,-1.594,-0.789,-0.434, 0.343, 1.364,-0.105,-0.881,-0.348, 0.363,-1.311,-1.158, 0.371, 0.417,-0.416, 1.138, 0.875, 0.075,-0.221, 0.642, 1.940, 0.305,-0.876, 0.530, 0.679, 0.671,-1.067,-0.066,-0.430, 0.192, 0.871, 1.227, 1.164, 0.781, 0.563, 0.023,-1.030,-1.211, 0.599,-0.734,-0.749,-0.105, 1.513,-0.849, 1.057, 1.340,-0.888,-0.859, 0.389,-0.348, 0.664, 0.169,-0.068,-0.166,-0.235, 1.380,-0.732, 0.003, 0.164,-1.419,-0.631, 0.268, 0.736,-0.427, 0.387, 0.657, 1.042,-0.016,-0.101,-1.208,-0.364, 1.354, 0.951,-0.913, 0.559, 0.040,-0.420, 1.299,-0.746,-1.228, 1.544, 0.231, 0.866, 0.465, 0.480, 0.289,-2.822,-0.332, 1.286,-0.663, 1.144,-0.447,-1.680,-1.013, 0.948, 1.480, 0.304, 0.176, 0.966, 1.214, 0.617,-0.331, 0.236,-1.770,-1.721,-0.056,-1.529,-0.357, 1.837,-0.183, 0.340,-1.167, 0.648,-0.227,-0.454,-0.297,-0.407,-0.907,-0.579,-0.878, 0.780, 0.121, 0.155,-1.909, 1.547, 0.991,-1.050, 1.899, 0.928,-0.334, 0.176,-0.498,-0.157, 0.530,-1.058,-0.525,-0.675, 0.258, 0.437, 1.731,-0.973, 0.546,-0.602,-0.967,-1.637, 1.357,-0.992,-0.082,-0.535, 1.156, 1.381, 1.085, 1.077, 0.392, 0.683, 0.170, 0.179, 0.436,-0.047,-0.107,-0.005, 0.926,-0.938,-0.072, 0.956, 0.361, 0.775,-1.023,-1.336, 1.289,-0.929,-0.083, 0.565,-0.661,-0.281, 1.883, 0.732,-1.709,-2.013,-0.171, 0.737,-2.108,-0.475,-0.199,-0.186,-0.206,-0.682,-0.039,-2.182, 0.815,-0.848,-0.234,-1.657,-1.067, 0.162, 0.373,-2.042,-0.014,-0.106, 0.292,-1.984,-1.066,-0.614,-0.427, 0.196, 2.209,-0.923, 0.223,-0.763,-0.653, 0.349,-1.274, 0.020, 0.195, 0.074,-0.818,-1.455, 1.233,-0.493,-1.677, 0.971, 1.268,-0.720, 0.272, 1.178,-2.003,-0.265,-1.741, 0.350, 0.657,-0.355,-1.343,-1.908,-0.044,-0.728, 0.103, 1.072, 0.632,-1.345, 0.630, 0.778,-2.021,-0.467,-0.496,-0.009, 0.677,-0.506,-0.442,-0.241, 0.794, 0.226,-0.585,-1.048,-0.972,-0.708, 0.932,-1.653, 0.449, 0.655,-0.507, 0.435,-0.025,-0.647, 0.531, 0.034,-0.522,-1.210, 1.350,-1.175,-0.084, 0.307, 1.786, 1.122, 0.572, 1.736, 0.103, 0.790, 0.913, 0.524, 0.903,-1.423,-0.013,-1.497, 0.727, 0.724, 1.002,-0.387, 1.001,-0.988,-0.504, 0.688,-0.396, 2.633, 0.420,-0.671, 0.139,-2.493, 1.347, 0.384, 0.208,-1.652, 0.874,-0.761, 0.457, 1.223,-2.200, 0.166, 0.929,-0.520,-1.026, 0.822,-1.030,-1.530, 0.331,-0.488, 0.178, 1.157, 0.884, 0.063, 1.078,-0.929, 1.065, 0.741,-0.587,-0.090,-0.776, 1.081,-0.304, 2.518, 0.903, 0.830, 0.968, 0.684,-1.870, 0.102, 0.602, 1.496, 0.438,-0.687, 0.100,-1.522, 0.050, 1.453, 0.870,-0.271,-1.453, 0.374, 1.892, 0.065,-0.377, 0.295,-0.454,-0.590,-0.115, 0.533,-0.360,-2.116,-0.403,-0.710, 0.617,-0.935,-1.923, 1.162,-1.972,-0.039, 1.218, 0.203, 1.130,-0.785, 0.380, 0.047, 0.569,-0.579,-0.060,-0.738,-0.323,-0.711,-0.158, 0.937,-1.004,-0.577, 0.729, 0.989,-1.539,-0.736, 0.871, 0.339, 0.231, 0.584,-0.542, 0.131,-0.503, 0.289,-0.313, 0.089, 1.152, 0.926,-0.957, 0.303,-1.055,-0.704,-0.193,-0.058,-0.155,-0.390, 2.482, 1.017,-0.158, 0.345, 0.626,-0.389, 0.898, 0.549, 1.288, 0.495, 0.073, 0.729, 0.370, 1.174,-2.265, 1.153, 1.122,-0.699,-1.167,-0.792,-0.529, 0.129, 0.494, 0.140,-0.398, 0.896,-0.898,-1.304,-1.453, 0.079,-0.125,-1.570,-0.798, 1.528, 0.361,-0.490, 0.776,-1.866, 0.140, 0.556, 1.201, 0.818, 0.174, 0.377, 1.708, 2.198, 0.186, 1.156,-0.113, 0.825,-0.383,-1.058, 0.766, 0.951,-0.395, 0.885,-0.436,-1.830, 0.182,-2.015,-0.291, 0.437,-0.094,-1.295,-2.177,-1.543, 1.204,-0.452, 1.413,-0.306, 0.297,-1.081, 0.764,-0.854, 0.183,-0.418, 1.568,-0.348, 2.388,-1.606,-1.304, 0.233,-1.981,-1.279, 1.070,-0.345, 0.570, 0.312,-0.810,-0.702,-0.358, 1.741,-1.460,-0.700,-0.945, 1.126, 0.556, 0.467, 0.416, 0.767, 0.296,-0.754, 1.178, 0.120,-1.032,-1.105,-0.224, 2.813,-1.415, 0.879, 0.598,-2.291,-0.948,-1.710, 0.452,-1.086,-0.226, 0.870,-0.837,-1.281, 1.358,-0.468, 0.767,-1.286,-1.039, 0.295, 0.050,-0.832, 1.255, 2.587, 0.805, 0.932, 1.456, 0.194,-1.167,-1.006, 0.307,-0.525,-0.642, 0.786, 0.287,-0.238,-0.778,-0.142,-1.245, 0.749,-1.248,-1.225,-0.337, 0.032, 1.532, 1.033,-0.813,-1.171, 0.704, 0.226, 0.178,-1.049,-0.287,-1.180, 0.120,-1.978, 2.540,-0.332,-1.083, 0.581,-0.814, 0.184,-1.774, 1.171, 0.747, 1.085,-0.902,-0.221, 0.300, 1.071,-0.089, 0.307, 0.996, 0.557, 0.745,-1.344, 0.473,-0.471, 1.477,-0.740,-0.256, 0.525,-0.369,-1.629, 0.519, 0.529,-0.765,-1.307,-0.190, 0.379,-0.797,-0.480,-0.205,-1.065, 1.525, 0.037,-0.464, 0.598, 1.630, 0.140,-0.266, 0.625,-0.474, 1.024, 1.039,-0.755, 1.664,-0.550,-1.423,-0.626,-0.745,-0.576,-1.019,-1.407, 0.353, 1.328,-0.713, 0.197, 0.251, 2.086,-1.399, 1.179,-0.532,-1.519, 0.354,-0.549, 0.657, 0.764, 0.425, 0.059, 3.971, 0.138,-0.600, 1.263, 0.769,-0.073,-1.301,-1.230, 0.444, 0.343,-0.579,-1.238,-0.218, 1.621, 2.510,-1.014,-1.066, 0.730,-0.603, 1.054,-0.268, 1.255,-0.497, 0.717,-0.353, 1.957,-0.712, 0.115,-0.275,-0.191, 0.746,-0.229,-0.833, 1.759,-0.211, 1.405, 0.235,-0.397,-0.201, 0.769, 0.941,-0.070,-0.261, 1.114,-0.144,-1.867,-0.839, 0.768, 0.063, 0.572,-0.847, 1.363,-1.138,-1.025, 1.910, 0.106, 0.625,-2.045,-0.768, 0.314,-0.172,-0.325, 0.000,-0.828, 0.278,-0.737,-0.825,-0.489,-0.967, 0.031, 1.646, 1.471,-1.683,-0.688,-1.362, 0.812, 0.279,-0.230,-0.015,-0.088, 0.552, 0.224,-0.651, 1.121,-0.137,-1.216, 0.675, 0.580,-1.422,-0.341,-0.977,-1.472,-2.303, 1.009,-2.162, 0.122,-1.789,-0.548, 0.250,-0.686,-0.800, 0.713,-2.186,-0.006, 0.043,-0.187, 1.773, 0.279,-1.282,-0.595,-0.585,-0.397,-2.336,-1.976, 1.662,-0.299,-0.995,-0.068,-0.015, 0.150,-0.932,-1.700, 0.287, 0.693,-0.166,-2.069,-0.324,-0.669, 0.602, 0.198,-0.194, 0.426, 0.108,-1.157, 0.426,-1.611,-0.203,-1.339, 1.624, 0.969,-0.060, 0.631,-0.791,-1.274,-1.201,-0.728, 1.209,-0.823, 0.269,-0.107, 1.268, 0.222, 0.052,-0.251,-0.446,-0.242,-1.251,-0.115,-1.747, 0.137,-1.000, 0.645, 1.275,-2.868, 1.501,-0.777,-1.470, 0.767, 0.733, 1.411, 0.676, 0.775, 0.495,-0.485,-0.338, 0.516,-0.873, 0.015,-0.536, 0.263, 1.023,-0.545,-0.782, 0.804,-0.781,-0.863, 1.325,-0.122, 0.353, 0.530,-0.146, 1.012,-0.374,-0.600,-0.147, 0.039,-0.903, 0.757, 0.364, 2.748,-0.952, 0.822,-0.725, 1.282, 0.708,-0.505,-0.228, 2.438, 0.947, 0.710, 0.159, 0.868,-0.009, 0.006,-1.793, 0.406, 0.737,-0.424, 1.005, 0.572, 0.151,-0.810, 1.842,-0.407,-1.211, 1.514, 0.687,-0.341, 0.211, 1.180,-0.050, 0.883, 0.159,-0.514,-1.577, 0.128, 0.053,-2.015, 0.055, 0.472,-1.253, 0.706,-0.284, 0.304, 1.122,-1.471,-0.439, 0.116, 0.151, 0.790,-0.349, 0.768, 1.209, 0.860,-1.426,-0.065, 0.074, 0.705,-1.803,-1.205,-0.859,-0.196, 0.597, 1.179,-1.914,-1.374,-0.086,-0.488, 0.687, 0.729, 0.407, 0.734, 0.781,-0.016,-0.696, 1.313,-1.458,-1.761, 0.724, 2.192,-1.179, 2.692,-1.413, 1.155, 1.981,-1.108,-0.432, 0.875, 1.160,-1.636,-0.666,-0.565, 1.154,-1.344,-0.385,-0.739, 0.373, 0.607, 0.561,-1.683,-0.177,-0.585,-0.399,-1.418,-0.368, 2.376,-0.685,-0.513,-0.709,-0.864, 0.939, 0.104,-1.273,-0.411, 0.303,-0.062,-0.592,-1.223,-0.767, 0.258,-0.358,-1.307, 2.120, 0.059,-0.620,-0.988, 0.271,-0.849,-0.999, 0.462, 0.643,-0.140,-0.507, 0.166,-0.602, 0.604,-0.154, 0.624, 0.166, 0.257};
    }
    else if(pdg.compare("nucleonqexse") == 0){	 
      return {1.474,-2.731,-0.163,-1.472, 0.185,-0.132,-1.854,-0.635,-1.593, 0.616, 0.926,-0.419, 0.188,-0.581,-0.013, 0.044,-0.774,-1.204, 0.382,-1.785, 2.127,-0.399, 0.625, 0.085, 0.707, 0.858, 0.066, 1.696, 0.694,-0.837, 1.282,-1.188,-0.333,-0.106, 0.459, 0.384, 1.865,-1.456, 0.915,-0.233,-1.359,-0.149,-0.546,-0.248, 0.278, 2.346,-0.373, 1.148,-0.030, 0.455,-0.918, 0.687, 0.495,-1.083,-0.411,-0.223,-0.559, 0.692, 0.987, 0.157,-0.183,-0.048,-0.427, 0.354,-1.944,-1.994, 0.027, 1.323,-0.157, 0.816, 0.312,-0.144, 0.579,-1.116,-0.287, 0.413,-0.432,-2.899,-1.213,-1.346,-1.394, 0.851, 1.664, 0.138, 0.835, 0.006, 1.305,-1.235,-0.712, 1.182,-1.378,-1.412,-0.511, 0.931, 2.255,-1.055, 0.192,-0.734,-0.534, 1.570, 1.797, 0.148, 1.782, 0.532, 1.356,-0.765, 0.463,-0.352, 0.020,-1.992,-1.884,-1.924,-0.405, 0.362,-0.727,-2.330, 1.353,-1.484,-1.049,-0.517, 1.397,-1.653, 0.972, 0.206, 0.944,-1.026, 1.950,-1.647,-0.618, 0.518, 0.752, 0.238, 0.043, 0.856, 0.470, 0.591, 0.231, 0.583, 1.642,-0.715,-1.117, 0.192,-1.163,-1.290,-0.167, 0.113, 0.386,-1.370,-1.416,-1.234,-1.511, 0.001, 0.959, 0.209,-0.975,-0.568, 1.865,-0.999,-1.710, 0.888,-0.997,-0.973, 1.682, 0.491, 0.056,-1.821, 0.917,-1.333, 1.212,-0.848,-0.641,-0.058, 0.689,-1.280, 0.609, 0.222, 1.227, 0.477, 0.521,-0.536,-1.858,-0.958,-0.740,-1.121, 1.588,-1.339, 0.299, 0.676, 1.602, 0.200,-0.770,-1.999, 0.118, 1.315,-1.196,-0.007, 2.175, 1.252,-0.012, 1.043,-1.317, 0.945,-0.639,-0.175,-1.205,-0.662,-0.423,-0.387,-0.350, 0.738,-0.147, 0.340,-0.046,-0.677, 1.965, 0.159,-0.334, 1.062, 0.357, 2.532,-0.743,-0.226,-1.307,-0.308, 1.248,-0.790, 0.622, 0.246,-0.694, 0.199, 0.208, 0.258, 0.870,-0.387, 0.884, 0.753, 0.380, 0.609, 0.967, 0.035, 0.177, 1.231, 0.323,-0.120, 0.013,-0.251, 3.008, 0.517, 0.043, 0.049,-0.118, 2.254, 1.333,-0.841, 0.809,-0.601,-1.189,-0.268,-1.638,-0.823, 0.076,-0.922,-1.038,-0.112,-0.040, 1.034, 0.281, 1.129,-0.800,-0.124, 0.150,-1.000,-0.823,-0.752, 1.159,-0.866, 2.775,-0.493,-0.152, 0.617, 0.353,-1.181,-0.211, 1.323,-0.044,-0.522,-0.465, 0.734,-0.609, 0.485, 0.747, 0.241,-1.246,-0.667,-0.464, 2.175, 1.320,-2.147,-0.715,-0.333,-0.502, 2.019,-1.294, 1.294, 0.295, 0.420,-1.133,-0.697, 0.514, 0.538, 0.150,-2.004,-0.581,-0.085,-0.759,-0.685,-0.213, 0.083, 0.192,-1.086,-0.311,-0.245,-0.209, 0.207, 0.254, 0.467, 0.965, 0.526, 0.384,-1.227, 1.442, 0.080,-1.593,-0.091,-0.616,-0.664,-0.262,-0.057, 0.420,-2.913,-0.281,-2.808,-2.291, 0.482,-1.048,-0.598,-0.758, 0.567,-1.094,-0.695,-0.134,-1.039,-0.474,-0.539, 0.233, 0.258,-0.929,-1.010, 0.840,-0.610,-2.344, 0.395,-0.845, 1.807,-0.866,-0.178, 0.742,-0.685,-0.412,-1.093, 1.228, 1.162, 0.466, 0.779, 0.457,-0.097,-0.215,-1.194, 0.372, 2.020, 0.104, 0.160,-0.673,-2.559,-1.805,-0.192, 0.449, 1.053, 0.274, 0.058, 1.136, 0.427,-0.527,-0.710,-2.128,-1.856, 0.308,-0.269,-1.882, 1.435, 0.183, 0.909,-0.655,-0.010, 0.286,-0.129, 0.335,-0.682,-1.417,-0.802, 0.750,-0.562,-0.403, 0.338,-0.527, 1.563, 0.915, 1.858, 0.724, 0.700, 1.024,-0.403, 0.816,-0.429,-0.579,-0.688, 0.202,-1.890, 0.018,-0.947, 0.036, 1.404,-0.583,-0.422,-0.429, 0.339, 0.288,-0.381, 0.660,-0.982, 0.074,-0.959,-0.354,-0.590, 1.067, 0.084,-0.030,-0.465,-0.606, 1.616,-1.235,-0.246,-1.793, 0.188,-0.219, 0.459, 0.302,-0.543, 0.295, 1.174, 0.429,-1.916, 1.378,-0.914,-2.518, 0.339,-1.725,-0.234, 1.115, 0.642, 1.068,-0.052,-0.466,-0.813,-0.759,-2.629, 1.463, 1.077, 0.292, 0.940, 1.528, 0.381, 1.806,-0.237, 0.515,-0.348,-1.659,-0.253, 0.512, 0.560,-0.588,-0.242, 1.317,-0.194, 0.093, 1.601,-0.012,-1.929,-2.307, 1.044,-0.905,-1.000, 1.562, 1.252,-0.743, 0.676, 0.169,-1.292, 0.469, 0.725, 1.099,-1.948,-0.369,-0.035, 0.573,-1.980, 0.281, 0.567, 0.642, 0.192, 0.674,-0.740, 1.078,-0.371, 1.053,-0.883, 0.270,-0.045,-0.578, 1.168,-0.549,-0.325,-1.855,-0.377,-0.433, 0.799, 1.218, 0.205, 0.448, 0.088, 0.918, 0.481,-0.318,-0.854,-0.681, 1.066,-1.109, 1.032,-1.239,-0.879, 0.763,-0.138, 0.347, 0.393, 1.513, 1.414, 1.153, 0.075,-0.360, 1.434,-1.203,-0.077, 1.514,-0.591, 0.573,-0.611, 1.003,-0.198,-0.216,-0.293,-0.398,-1.344,-0.276, 0.643, 0.636,-0.908, 0.019,-0.045,-1.125, 0.548, 1.590, 0.209,-1.211, 0.222,-1.158, 0.910,-1.140,-0.520,-0.454, 1.964, 1.512, 2.287,-0.244,-0.877,-1.192, 0.055,-0.431,-0.709, 1.293,-0.326, 1.452, 0.889,-1.010,-2.135,-0.276,-0.030, 0.540, 1.297,-0.603,-1.518, 0.354,-0.237, 0.136, 1.093,-0.084,-0.161, 0.115,-0.440,-0.507, 1.648,-0.410,-0.685,-2.053, 1.250, 1.025, 0.762,-0.485, 0.189,-0.599, 1.340,-1.527, 1.532,-0.172,-0.484, 1.564,-1.148, 0.233,-0.086,-2.078,-0.178,-0.197,-0.133,-0.153,-0.559,-0.255, 1.461,-0.030, 0.132,-0.291,-0.637,-0.205, 0.600, 0.417,-0.266, 1.150,-1.732, 1.454,-0.806,-0.233, 1.021,-1.102, 0.680,-0.230, 0.437, 0.018,-0.472, 0.485,-0.557,-1.465,-0.559,-2.135,-1.839, 1.285, 2.604, 0.102,-0.203,-0.084,-1.785,-0.622,-0.507, 0.879,-0.468,-0.582, 3.034, 0.839,-0.252, 1.732,-0.487,-1.543,-0.617, 0.544, 0.010,-1.381,-0.601,-1.870, 1.145,-2.146,-0.221,-0.393, 0.875, 0.208, 0.103, 0.788, 1.309,-0.350, 0.025, 1.258,-1.184, 1.763, 0.506,-0.115,-0.271, 0.718, 0.922, 1.820, 0.536,-0.135,-1.544, 0.163,-1.258,-0.001,-0.579, 0.203,-0.024, 0.504, 0.830, 0.023,-0.657, 2.141,-0.924,-1.240,-0.077, 0.345,-2.187,-0.575, 1.585, 1.120, 0.576,-0.214,-0.028, 0.884,-0.229,-0.112, 1.490,-0.020,-1.664,-1.720, 0.693, 1.178,-0.050, 0.768, 1.425, 0.999,-1.363,-0.105, 0.081, 0.509, 1.219, 0.322, 1.609,-0.315,-0.123,-0.423,-0.844,-0.636, 0.431,-0.137,-0.812, 0.579, 1.395,-0.420,-0.022,-1.272, 0.749, 0.312, 0.044, 0.318,-1.236, 0.673, 0.358,-0.549,-1.745, 0.566, 0.965, 1.446, 0.253, 1.573,-1.715,-1.702,-1.296,-0.485, 0.978,-0.447, 0.775, 0.394, 0.493, 0.258, 0.028, 0.429,-0.940, 0.430, 0.036, 0.610, 1.013,-0.611, 1.091,-0.850, 2.048, 2.124, 0.061,-0.698,-0.368,-0.868,-0.590,-0.361,-0.894,-0.780, 1.233, 1.118, 2.094, 0.776,-0.155, 0.170, 1.241,-0.031, 0.067,-1.477,-0.770, 0.206,-1.876,-1.615, 0.492, 0.096,-0.812, 0.218, 1.349, 1.008, 0.027, 0.167, 2.258, 1.083, 0.486,-1.105,-1.112, 0.508,-0.440,-0.444,-1.402,-0.710,-3.212, 0.540,-1.429,-1.783,-0.304, 0.560, 0.376, 0.745,-1.135,-0.022, 0.047, 1.735,-0.351,-0.608,-1.224, 0.773, 2.144,-0.307,-1.114, 1.200, 1.957, 0.191, 0.289, 1.442,-1.132, 0.668,-0.218, 0.942,-0.561, 0.717,-1.028,-0.770, 1.240,-1.320, 0.099, 1.304, 0.449, 1.510, 0.306, 1.124,-1.869, 0.535,-0.605,-0.251, 0.827, 1.654,-0.044,-0.094, 2.034,-2.132, 1.322,-0.256, 0.865,-0.810, 0.380,-0.045, 0.034, 0.245,-0.229, 0.567, 0.452, 0.293,-0.364,-0.178,-2.205,-0.153,-0.119, 0.737,-3.631, 1.086, 0.626,-1.685, 0.434, 1.425,-0.253,-1.771, 2.868, 0.887, 0.249,-1.056, 0.360, 0.884,-1.731, 0.812,-0.915,-0.869, 2.020, 1.360, 0.573, 0.235,-0.325,-1.796,-1.203, 0.593, 1.211,-1.504, 0.390,-1.196, 1.075, 1.366,-0.569, 0.016, 1.569,-0.832,-0.456, 0.022, 1.386, 0.640,-1.843, 0.013,-0.226,-0.573, 0.245,-2.716, 1.018, 0.317,-0.962,-1.751, 1.223, 0.413, 0.889,-0.290, 0.972, 0.295,-0.923, 0.179,-0.046, 0.059,-0.958,-0.066,-0.841, 1.017, 1.140, 0.919,-0.070, 2.114,-0.503, 1.757, 0.041, 0.349,-0.670,-0.479,-0.314, 0.140,-0.514,-0.834,-0.294,-0.652, 0.737,-0.298,-0.012};
    }
    else if(pdg.compare("nucleoninexsec") == 0){	 
      return {1.698,-0.171,-0.042, 0.813,-0.176,-0.475,-0.258, 1.070,-0.129,-0.224, 0.018,-1.205,-0.048,-0.619,-0.512,-1.342,-0.172,-1.517,-0.323, 1.198,-0.598,-0.456, 1.628, 1.039, 1.012, 0.318,-0.390, 0.567,-0.956,-0.222, 0.734, 0.763,-0.628,-1.956,-0.124,-0.287, 0.606,-1.524,-1.680, 0.937,-2.634,-2.026, 1.014,-2.230, 1.054,-0.514,-0.298,-1.644,-1.432,-0.776,-1.399, 0.284,-0.541, 0.188, 1.712, 0.825,-1.419, 0.478, 0.905, 1.669,-1.105, 0.152,-0.955,-0.403, 0.646,-0.233,-0.249,-0.648, 0.061, 1.072,-0.331, 0.471,-1.954, 1.515,-0.418, 0.597, 1.300, 0.905, 0.476, 0.113,-0.161,-1.069,-1.349,-0.020, 1.691, 0.853,-0.348,-0.450, 0.527, 0.467, 0.379,-1.587,-0.050,-0.329,-1.408,-0.319, 2.080,-0.724, 0.748,-0.027,-0.768,-0.165,-0.255,-0.627, 0.273,-0.635, 0.747,-0.781,-1.222, 0.140, 0.008, 1.463, 1.086,-0.052,-0.283, 0.704, 0.836, 1.994,-1.016, 0.125,-2.191,-1.249,-0.804,-0.340, 1.893, 0.471,-1.163,-0.693, 0.663, 0.088, 1.408, 1.072, 0.116,-0.909, 0.271,-0.918,-0.144, 1.263,-0.622, 1.117,-1.231, 0.083, 0.062,-1.066,-0.541,-0.559,-0.040, 0.044,-0.481, 0.281,-1.003, 1.762, 1.181,-0.202, 1.724,-0.991,-0.331,-0.410, 1.550,-0.081, 0.192, 0.482, 0.987,-1.067,-0.644,-0.377,-0.158,-0.379, 0.171, 0.319, 1.073, 1.172, 0.702,-0.868,-0.794,-0.687,-0.146,-0.060,-0.504,-1.456,-0.113, 0.919,-0.773,-0.343,-0.021, 0.940, 0.645,-0.363,-1.141, 0.434,-0.336, 0.044, 0.950, 0.238, 1.332,-0.721, 0.812, 0.057, 0.287, 0.928, 0.495, 1.300,-0.673,-1.688, 0.124, 1.162,-1.975, 1.775, 0.660, 0.077, 0.310,-0.104, 0.076, 1.269, 0.877, 0.919, 1.810,-1.057,-0.946, 0.105, 0.309,-0.261, 0.413, 0.554, 0.544,-0.139, 0.718, 1.679,-0.437,-0.331, 0.737,-1.035, 0.984,-0.746,-0.240, 0.555, 0.143, 0.357,-0.110, 1.581, 0.417, 0.110,-0.254,-1.017, 0.179,-0.055,-0.119,-1.389, 0.012,-0.082, 0.470, 0.503,-0.279,-0.728,-0.642, 1.640,-1.540,-0.279,-1.545, 0.819, 0.325,-0.484, 0.599,-0.390, 0.791, 0.081, 0.120,-0.815,-0.005,-0.552,-0.564,-0.394,-0.728, 0.513, 2.208, 1.604,-0.603, 1.304,-1.024,-0.390,-0.857, 0.030,-0.066,-1.038, 1.077,-0.190,-0.586,-0.727,-1.983,-1.433,-0.410, 0.779,-0.016, 0.267, 0.136,-0.310, 0.995,-1.405,-1.958, 2.131,-0.225,-1.337, 0.626,-1.510, 1.931,-0.145, 0.537, 0.512, 1.585,-0.825, 1.024,-1.190,-0.189,-1.867,-1.674, 1.129, 1.822, 0.275, 0.178, 1.596,-1.376,-0.573, 1.123, 0.464, 0.002,-0.840,-0.102, 0.753, 2.011, 0.271,-1.251, 1.271,-0.791,-0.745,-0.494, 0.631, 0.313,-0.245,-0.718,-1.009,-0.170,-0.692,-0.296,-0.472, 0.179,-0.509,-0.567, 0.398, 0.302, 0.752,-1.752, 1.107,-0.534,-1.534,-0.932,-0.852,-0.595,-0.143,-1.530, 1.304,-1.377, 0.604,-1.662,-1.081, 2.651,-0.202, 0.051,-0.939, 0.658,-1.121,-0.029, 0.836, 1.711, 0.435, 1.323, 0.389,-0.642,-0.658,-0.269,-0.189,-1.050, 0.515,-0.642, 2.107, 0.985, 1.191,-1.217, 0.119, 0.076, 1.043,-0.365, 0.296,-0.371,-1.382,-0.742, 0.497, 0.605, 1.201,-1.143,-0.099, 0.355, 0.208,-1.199, 0.111,-0.824,-1.748, 0.600, 1.520, 2.215,-1.914,-1.307, 0.467, 0.900, 1.112,-0.418, 0.074,-0.915, 0.230, 0.016,-0.476,-0.890,-0.762, 1.450,-1.108, 0.939,-1.612, 1.075, 0.141, 2.447, 0.443,-1.369,-0.880, 0.752,-0.685,-0.415,-1.532, 0.470, 0.271, 1.231,-0.584, 0.398, 0.871,-1.340,-0.048, 0.200, 0.480,-0.090,-0.546, 0.446, 0.894,-1.285,-0.856,-0.280, 1.107,-0.027, 3.651,-1.009, 0.696,-0.626,-0.667, 2.446,-0.588,-0.991, 1.662, 1.190,-1.134, 0.502,-0.919,-0.154, 0.049,-0.895,-0.966,-0.847,-1.668,-0.410, 1.442, 0.554,-1.562, 0.187, 1.681, 1.120,-0.341,-2.215, 0.249, 1.020,-0.889,-0.777, 0.415, 0.904,-2.424, 2.176, 0.916,-0.598, 0.082, 0.269,-0.323, 0.978,-1.233,-0.441, 1.504, 0.857,-0.205,-0.209, 0.671, 0.833, 0.575,-1.515, 0.385, 0.928, 1.302, 1.504, 0.561,-0.716, 1.488, 2.681,-1.928, 0.300,-0.509, 0.506,-0.953,-1.181, 0.210, 0.457,-1.334, 0.956,-0.052, 1.884, 0.728, 0.038,-1.147,-0.674,-0.149,-0.713, 1.451, 1.148,-0.198,-1.570,-0.291, 0.790, 0.032, 1.066, 1.027,-0.382, 1.248, 1.233, 0.645, 0.587, 0.778, 0.184,-0.847,-0.514,-0.249,-0.890, 0.117,-1.155,-1.263, 0.717, 0.139, 0.755, 0.465, 1.613, 1.860, 0.233,-2.233,-0.680,-0.016, 2.342,-0.482, 1.837, 0.288,-1.132,-0.632,-0.302,-1.085, 1.498, 1.745, 0.638, 0.979,-1.199,-0.183,-0.024,-0.653, 0.954,-0.145,-2.187, 1.058,-1.346, 0.855,-2.552, 0.537, 0.587, 0.398, 0.386,-0.046,-1.109, 1.471,-2.899,-0.671, 0.247, 0.132, 0.512, 0.656,-0.612, 1.438, 0.814, 0.493, 0.008, 2.467,-0.150, 0.870, 0.203,-0.444,-0.838,-0.610,-1.411,-0.582,-0.123,-0.288,-0.869, 1.735, 1.859, 0.109, 0.850,-0.347,-0.121,-0.466,-0.591, 0.796, 0.590, 0.625, 0.594,-0.056,-1.191, 0.711,-0.825, 0.031,-0.220, 1.175,-0.564,-0.196, 0.067,-0.466,-0.333, 0.606,-0.847,-1.345, 0.688,-1.243, 0.750, 0.580,-2.519, 2.238,-0.051, 0.569, 1.032,-0.415,-0.248, 0.236,-0.133, 0.236,-0.733,-0.678,-0.722, 0.644, 0.128, 0.571, 1.808, 1.583,-0.738,-0.052, 0.936, 1.646,-0.654,-0.687,-0.388, 0.409,-0.707,-1.389, 0.035, 0.715,-0.844,-0.343,-0.649,-0.036, 1.663,-1.065, 2.524,-0.254,-0.894,-1.378,-1.052,-0.571,-1.205,-0.769,-0.027, 0.178,-2.024,-0.010, 0.316, 0.814,-0.993, 0.195,-0.055, 1.793, 0.395, 0.069, 0.409, 0.703,-0.722, 0.219, 0.678, 0.714, 0.707,-1.844,-1.035, 0.744,-0.261,-1.571,-0.166,-0.107, 0.053, 0.220, 1.473, 1.316,-0.518,-0.882, 1.156,-0.422,-0.938, 1.473, 0.222, 0.605,-1.404, 0.824,-0.760, 0.021, 0.322, 1.895,-0.606,-0.401, 0.447, 0.319, 0.431,-0.155, 0.636,-0.334,-0.376,-0.266,-0.135, 0.975, 0.472, 1.839, 0.161, 0.805,-0.113,-0.608, 0.965,-0.535,-0.081, 0.643, 0.663,-0.009, 1.940, 0.864,-0.473,-1.340, 1.557,-0.019, 1.105,-0.269, 0.611, 1.021, 0.289,-2.492, 0.439, 1.103, 1.290,-1.019,-1.886,-2.675, 1.573,-0.437,-0.109, 2.161, 0.835,-1.969,-0.367,-1.647, 0.230, 0.366,-0.153, 0.812, 1.566, 2.399, 0.673,-0.266, 1.061, 0.709, 0.100, 1.105,-0.829, 1.322,-2.849, 0.246, 0.374, 0.479, 0.450,-0.760,-0.601, 1.255, 0.097, 2.004,-1.759, 0.061, 0.272, 0.887,-0.529,-0.406,-0.400, 0.816,-1.584,-0.704,-0.051,-1.202, 0.513, 1.217, 2.014, 0.065,-2.208,-0.186,-0.809,-0.268, 1.553,-0.219,-0.678,-1.211,-0.028, 0.588,-0.966, 0.889, 0.475,-0.344, 0.828, 0.842, 0.870,-0.315, 0.127,-0.857, 1.426, 0.402, 0.111, 2.453, 0.044,-0.723,-0.381, 0.547, 1.991,-0.336, 0.149, 1.017,-0.998,-2.254, 0.659,-1.318,-0.549,-0.994,-0.356, 0.579,-1.242,-0.812, 1.734,-1.207,-0.500, 0.623,-1.923, 0.212, 0.759, 1.390, 1.037, 0.745, 2.577,-0.104, 0.889,-0.618, 0.554,-1.425, 0.701,-1.567,-1.682, 0.285, 0.422,-0.431, 1.613, 0.563, 2.504,-0.939,-0.692, 0.252,-2.329, 0.816,-0.130,-0.370, 0.319,-0.522,-2.260, 0.249,-1.123,-2.037,-1.649, 0.528, 1.158, 0.873, 0.067,-2.425,-0.131, 0.531, 0.199,-0.647,-0.519, 0.374,-0.788,-1.403, 0.323,-1.068,-0.438,-1.159,-0.329, 0.285,-0.316, 0.738, 0.431, 1.325,-0.884,-0.148, 2.594, 0.011, 0.225,-0.800, 1.003, 0.503, 0.024, 0.096,-0.929, 0.930, 1.562, 2.076, 0.665,-0.840,-0.292,-1.145,-0.722, 1.186,-0.670,-0.184, 1.489,-0.267, 0.410,-0.099,-0.743,-0.034,-0.722, 0.613, 0.659,-0.278, 1.165, 2.781,-0.297,-1.630, 1.215,-0.731,-0.240,-0.022,-0.329, 0.321, 1.101,-0.046,-0.257, 0.568, 0.525, 0.476,-1.150,-1.251, 0.035,-0.167, 1.698, 0.125, 1.605,-0.133,-1.688,-1.446, 1.151, 0.385,-1.338, 0.378, 0.678,-1.243,-1.324, 1.496, 1.905, 0.434};
    }
    else if(pdg.compare("pionqexsec") == 0){	 
      return {-1.586,-1.101,-1.662,-0.337, 0.355,-0.081,-0.547, 0.713,-0.293,-0.355, 0.431, 1.105, 0.087, 1.273, 1.331, 0.365, 0.331, 0.424, 0.477,-0.101,-1.291, 0.304,-0.019, 0.990, 1.716, 0.301,-0.171,-0.124,-0.736,-0.290,-1.142,-0.165,-0.080,-0.412,-0.939,-0.810,-0.660, 0.767, 0.204, 0.638,-0.333,-1.417, 0.021, 0.279,-0.981,-0.890, 0.498, 0.423, 0.449,-1.242,-0.305,-0.391,-0.441,-0.173,-1.928, 1.311,-1.111,-3.303, 1.852, 1.459, 0.991,-0.294, 1.504,-0.606,-0.622,-0.855,-1.062,-0.614,-0.868,-1.111, 0.049, 0.492, 1.604, 1.291, 1.264, 0.771,-1.012,-0.143,-0.561, 0.806,-0.740, 1.045,-0.318,-1.133, 0.673, 1.456,-1.230, 1.745,-0.479,-0.312,-1.274,-0.328,-0.102, 0.981, 2.352, 0.711, 0.713, 0.679,-2.087, 0.586, 0.999, 0.407,-0.392,-1.991,-0.051, 0.867, 0.540,-2.353, 0.924, 0.214, 0.971, 0.349,-0.125,-1.118, 0.989,-0.115,-0.724,-1.348, 2.159,-0.554, 1.602, 2.703,-0.438, 1.615,-0.027,-0.064, 0.597,-0.828, 0.844, 1.474,-0.654, 1.187, 0.099,-1.701,-1.052, 0.221, 1.995, 0.521, 2.303, 0.240,-0.106,-0.015,-1.621, 2.757, 0.437, 0.902, 0.170,-0.851, 0.368,-1.014,-0.985, 0.722,-0.780, 0.334,-0.030,-1.811,-0.346, 0.531,-2.423,-0.669,-0.492, 0.620,-2.794,-2.365, 1.387,-1.089, 2.788, 0.622,-0.831,-1.583, 0.356, 0.269,-0.154, 2.279,-0.146, 1.067, 1.856,-0.739,-1.374,-0.903,-0.688, 0.555,-0.595, 0.383, 1.671, 0.784,-0.871, 0.882, 0.625, 0.306,-2.392,-0.425, 0.910, 0.374, 1.375, 1.050,-0.380,-0.812, 0.112, 1.534,-1.992, 0.127, 0.206, 1.514,-1.099, 0.621, 0.683, 2.011, 0.758, 1.851, 0.550,-1.036,-0.004,-2.935,-1.616,-1.577,-0.176,-1.752, 0.764, 1.726, 1.702, 0.780, 0.784,-0.480, 0.794, 0.466, 0.681, 0.475,-1.091, 0.539, 0.864,-1.705, 0.867, 0.080,-0.034, 1.019, 0.813,-0.183, 0.794, 0.414, 0.735, 0.057,-1.351,-0.245, 0.190,-0.427,-1.274, 1.554,-1.144, 1.361,-0.170, 0.276,-0.986,-0.482, 0.580, 0.439, 0.647, 1.241,-0.610,-0.608, 0.560, 0.854, 0.250, 0.043, 2.129,-1.148, 1.109, 0.861,-2.471,-0.777, 2.460, 1.602, 0.297, 1.925, 0.911,-0.204,-0.346, 0.540, 1.418,-0.384,-0.473, 0.646, 1.077, 1.911,-1.298, 1.534,-1.554, 1.250,-0.284, 0.686,-0.407,-0.050,-0.009, 0.003, 0.828, 0.568,-1.766,-1.399,-0.956, 1.077, 0.363,-0.863,-0.207,-0.537,-2.123, 0.469, 0.254, 1.260,-0.043, 0.578, 1.659,-0.630, 0.857, 1.235,-0.837, 1.091, 0.091, 1.687,-0.118,-1.017,-0.553,-2.215, 0.810, 1.619,-0.262, 0.075,-0.240, 1.521, 0.758,-1.151,-1.423,-0.537, 0.206,-0.569, 0.163,-0.841, 1.486,-1.009, 0.202, 1.513, 0.399, 2.147,-0.761,-0.568, 0.852, 0.507, 1.692,-0.874,-1.716,-1.128,-0.201, 0.612, 1.546, 0.478, 1.808, 1.684, 0.487, 1.369,-0.307, 0.971,-0.423, 2.816, 0.985,-0.183,-1.880, 0.037, 1.271,-0.992,-1.147,-0.128, 0.696, 0.160, 1.052, 1.195,-0.456, 0.021,-0.415,-0.300,-0.112, 0.125,-0.562,-2.541, 0.111,-1.038,-0.787, 0.333, 0.932, 0.178,-0.075, 0.026, 0.753,-0.880, 0.527, 1.804,-1.341,-1.048, 0.785, 0.621,-0.514, 0.519,-1.885,-1.315,-0.717,-0.245, 1.317, 0.199,-0.775, 0.917, 0.099, 1.525, 0.602, 0.647, 0.677, 0.391, 1.062,-1.083, 0.137, 0.290, 0.632, 0.848,-1.810, 1.418,-0.561,-0.106,-0.072, 1.250,-0.245, 2.362, 1.004,-0.015,-0.974, 0.544, 0.493, 0.663, 1.619, 1.635,-1.526,-0.672,-0.267, 0.308,-1.073,-1.407, 2.102, 1.532,-0.861, 1.194, 0.390, 0.602,-0.761,-0.094, 2.423, 1.170,-1.730, 0.729,-0.087,-1.301, 0.529, 0.746,-1.021,-0.254,-0.052,-0.159, 0.305,-0.869, 0.382, 1.048, 0.147, 0.056, 0.382,-0.583,-0.502, 0.738,-0.601,-0.065,-0.747, 0.000,-1.140, 0.892,-0.378,-2.621, 0.064,-0.777,-0.076, 0.764, 1.124,-1.507,-0.362,-1.411, 0.767, 1.659,-0.078, 0.324, 0.966,-0.227, 0.228, 0.662, 0.101, 0.373,-0.554, 0.054,-0.985,-0.259,-2.073,-0.417,-0.694, 0.223, 0.994, 1.185,-0.797, 0.679,-0.695,-0.223,-0.573,-0.602, 0.614, 0.620, 0.242,-1.065,-0.228, 0.386,-0.459, 1.381,-1.330,-0.525,-0.496, 0.243,-0.207,-0.386,-0.180,-1.990,-2.610,-0.217, 0.651, 0.221,-1.209, 1.216,-0.250, 1.202, 0.487, 1.424,-0.182,-0.644,-0.471,-1.281,-1.753, 0.968,-0.233,-1.126, 1.129,-0.891, 0.360, 0.665,-0.593, 0.960, 1.050,-1.526,-0.845, 2.249,-1.463,-1.605,-0.477, 0.371, 0.060, 0.615, 1.189, 0.722, 0.965, 1.681,-1.199,-1.550,-0.934,-0.800, 1.793, 0.490,-0.136, 1.230,-0.087,-0.396,-0.060, 0.538,-0.004, 0.415,-1.203,-0.059,-1.717,-0.620,-0.635, 0.375, 1.145, 0.711,-0.463, 1.241, 1.417, 0.467,-1.943,-1.030,-0.606,-0.612,-2.029,-0.814,-1.589, 0.978, 0.581,-0.813, 0.606,-0.566, 0.840, 0.345, 0.458, 0.710,-0.155, 0.880,-0.829, 0.248,-0.473, 0.463,-0.958,-0.466, 0.471, 1.579, 0.821, 0.080,-0.155, 0.170,-0.086,-1.043, 2.740, 0.220,-1.304, 0.785, 0.895, 1.322, 2.056, 0.962,-0.404,-0.284,-0.666, 1.696, 0.800, 1.189, 1.026,-1.218,-0.411,-1.480,-0.336, 0.444,-0.029, 0.288, 0.683,-0.196,-0.787, 0.046,-0.210,-0.520, 0.044, 0.195, 1.194,-0.489, 1.720,-0.279, 0.328,-0.949,-0.330, 0.859, 0.354,-2.189, 0.323, 0.580,-1.473, 2.052, 0.439, 0.469,-0.933, 0.141, 1.008, 0.779, 1.587,-1.779, 0.729, 0.436, 0.002,-1.333, 0.064, 0.836,-0.353, 1.722, 0.021,-0.721,-0.464, 0.528,-0.559, 0.970, 0.526,-0.327,-0.926,-1.285, 0.554, 0.526, 2.333, 0.825, 0.260, 1.002, 0.301,-0.911, 0.486,-1.057,-1.549,-1.214,-0.982,-0.259, 0.502,-1.216, 0.170, 0.827, 0.438, 0.081,-0.872, 1.089,-0.511,-0.502, 1.388, 0.482,-0.104,-0.673,-0.036,-0.586,-0.143, 1.009, 1.043,-0.009, 0.901,-0.768, 0.376, 1.353, 0.618,-1.503, 0.260, 0.334, 1.693, 0.916,-0.180, 0.187, 1.238, 1.009,-0.655, 1.451,-0.637, 0.406, 1.543,-0.379, 0.243, 0.159, 1.473, 1.222,-0.176, 0.801, 0.529, 1.338,-1.421,-0.746,-1.783,-1.038, 0.699, 1.104,-0.628,-0.254, 1.274, 0.097,-0.293, 0.798, 0.282,-2.056,-0.694,-0.378, 0.721,-0.087, 0.195, 0.837,-1.042, 1.238, 1.127,-1.488, 0.280, 0.087,-1.426, 0.901, 0.819,-0.413, 0.442, 0.358, 0.974,-0.093,-1.186,-1.811, 0.012,-0.518, 0.992,-1.297, 1.865, 0.405,-0.147, 0.469,-0.010, 1.413, 0.016,-1.377,-0.252, 0.824,-0.765, 0.541,-0.642, 1.605, 0.741,-0.030, 0.352,-1.118,-0.919, 1.614,-0.874, 0.439,-0.034,-0.482,-0.723, 0.402, 0.042, 0.585, 0.070, 0.114, 0.634, 0.378, 2.350, 0.399,-0.214,-0.789,-0.095, 1.079, 1.168,-1.063,-0.738,-0.347,-0.316,-0.976, 0.313, 0.198,-0.444,-0.117, 0.301,-0.544, 0.818, 2.234,-1.157,-0.910, 0.170,-1.106, 0.597, 1.215, 0.953,-0.682,-0.021, 0.981,-1.249, 1.545,-0.012,-0.392,-1.273, 0.060,-0.528,-0.074, 1.123,-1.592,-0.328, 1.961, 0.770, 0.370,-0.491,-0.202,-0.282,-1.491,-1.698,-1.279, 0.798, 0.670, 0.051, 0.301, 0.403, 2.986, 0.156,-0.187,-0.609,-0.514, 0.474,-0.226,-0.890,-0.558,-1.666,-0.248, 1.352,-0.301,-0.057, 0.489,-0.103,-0.303,-0.922,-0.090, 0.471, 1.516,-1.578,-0.988, 0.182, 1.272,-0.123, 1.107, 0.751,-0.192,-0.179,-0.039, 0.967,-1.663,-0.329,-0.166, 1.132,-0.103, 1.895, 1.207,-0.500,-0.406, 0.943,-0.971, 0.471,-0.416,-0.823,-0.206, 0.911, 0.350,-1.367, 1.440, 1.840,-0.090, 0.759, 1.629, 0.580, 0.085, 0.230,-1.532,-0.779,-0.895,-0.289, 0.967,-0.084, 1.089,-0.315, 0.735, 1.076,-0.226,-0.287, 0.932,-0.697,-0.211,-1.060, 0.644, 0.934, 0.308,-0.176, 0.416,-1.058, 0.318, 1.447, 0.760, 1.603, 0.092,-0.255,-1.669,-1.135, 0.383,-0.288, 0.264,-0.497, 1.108,-0.536,-2.854, 1.045, 0.041,-0.021,-1.644,-0.114,-0.778, 0.192, 0.428, 0.131, 0.406,-0.289, 0.571, 2.155,-0.629, 0.975, 1.006,-0.242, 1.111,-0.167, 0.125};
    }
    else if(pdg.compare("piontotxsec") == 0){	 
      return {-0.802, 0.630, 1.265, 1.148,-0.558,-0.828,-0.099, 0.199,-0.451,-0.070, 1.223, 0.196,-0.728, 0.592, 0.194, 0.295, 0.259, 1.767, 0.778, 0.132, 1.090, 0.240,-0.770, 0.866, 1.128,-1.017,-0.245,-0.912,-0.561, 1.447,-0.186,-1.646, 0.915,-1.579, 0.742, 0.822, 0.621, 0.705,-0.603, 0.970,-0.116,-1.334, 0.222, 0.794, 1.412,-0.256,-0.352,-1.109, 1.284,-2.254, 0.020,-0.309, 0.153,-1.079, 0.147, 2.128,-0.284,-0.328,-2.046, 0.712, 1.181, 1.176, 1.829, 0.041, 0.278, 0.581, 0.406,-1.329, 1.297,-0.558,-0.906, 1.595, 0.840,-0.286,-0.670,-1.317,-0.656, 1.337, 0.474, 0.422,-1.026, 1.094, 0.959, 0.445,-1.046,-0.651, 0.006, 0.571,-1.601,-0.789,-0.582, 1.208, 1.408, 0.812, 0.147, 0.420,-0.317,-0.272, 0.449, 1.778, 0.115, 0.676,-0.102,-0.027,-0.978, 0.856, 0.311,-0.074,-0.439,-0.265,-0.287, 0.525, 1.122,-0.616,-0.145,-0.336,-0.064,-1.175, 0.791,-0.417, 0.517,-0.171,-0.259, 0.669,-1.206, 0.727,-1.476, 2.247,-0.451,-0.326, 0.482, 0.785, 0.532, 0.309, 0.245, 0.594,-0.110,-0.745, 0.263,-0.016,-0.942,-0.278,-0.386,-1.865,-0.685,-0.140, 0.002, 1.319,-0.246,-1.407,-2.519, 0.653,-0.658, 1.208,-0.477,-0.643,-0.381, 0.821, 0.876,-1.240, 1.089,-0.880, 0.048,-0.444, 0.264, 1.146,-1.681, 1.469,-0.375,-2.626, 1.392,-0.360, 1.618,-1.092, 0.275,-0.547,-0.056, 0.555,-0.044,-0.174, 1.214,-0.592,-0.372, 0.154, 0.611,-1.464,-1.076,-1.092, 1.504,-0.331,-1.582, 0.838,-1.165,-0.144,-1.155,-0.538, 0.018,-1.285,-0.228, 0.147,-0.316, 0.225, 0.812,-0.391, 0.038,-1.279,-0.135,-0.946, 0.652,-0.452, 1.234, 0.689, 0.849,-0.689,-0.706,-0.520, 0.475,-0.068, 0.518,-2.410, 0.448, 2.107, 0.467, 0.885, 1.031,-0.194,-1.313, 0.137, 0.813, 0.142, 0.580, 0.170, 0.431,-0.003,-0.135, 0.443, 0.408,-0.666, 0.314, 0.797, 0.374, 0.599,-1.992,-1.782,-1.734, 1.672,-0.688, 0.757,-0.092, 0.845, 1.251,-1.052,-0.255,-0.150,-0.687, 2.269, 0.529,-1.384,-0.306,-0.556, 0.075,-0.184,-1.849, 0.610,-2.014,-0.624, 0.641,-1.362, 1.355, 1.446,-0.525, 0.191,-1.918, 0.934, 0.522, 0.149, 1.229, 0.078, 0.006,-0.176,-0.627,-0.327, 0.957, 0.665,-0.938,-0.289, 1.119,-0.832,-0.172,-0.873,-0.337, 0.430, 0.547,-0.429,-0.308,-1.479,-1.948, 0.619,-1.636, 1.066,-0.317,-0.125,-0.312,-0.087,-1.568, 1.850,-0.256,-1.875, 2.065, 1.887,-2.447, 1.157,-0.377,-0.121, 0.519, 0.540,-0.131,-1.041,-0.165, 0.909,-0.923, 0.241, 1.466, 0.538,-0.191,-0.568,-0.356, 0.859,-0.494,-1.459,-0.401,-0.695,-0.783,-1.295, 0.558, 0.716, 0.615,-0.889,-0.765,-0.645, 0.601,-1.814, 0.965, 0.756, 1.221, 1.316, 0.505,-0.110,-1.073,-1.512, 0.724, 0.444, 0.421, 1.526, 0.608, 0.486,-1.219,-0.444,-1.110, 0.951,-0.637, 0.615,-0.459, 1.593,-0.964,-0.454,-0.420, 1.481, 1.282,-0.751,-1.383,-1.582,-0.978,-0.364,-0.360, 1.520, 0.737,-2.359, 1.498,-1.080,-0.796, 0.059,-0.236, 1.237, 1.983, 0.830,-1.585,-1.443,-0.917,-0.466, 0.800,-1.912, 2.029, 1.458, 0.737,-1.469, 1.268,-0.007,-0.243, 0.221, 0.800,-0.229,-2.053, 0.723,-1.486,-0.705,-0.945, 0.007,-0.952, 0.529, 0.534, 0.789, 0.890, 0.484,-0.006,-0.287, 0.900,-0.834,-0.951, 0.086, 0.143,-1.049,-1.234, 0.957, 2.202,-1.654,-2.366,-0.404,-0.055,-0.580,-0.472,-0.435, 0.524,-0.210, 0.547,-0.926,-2.116,-1.128, 0.599, 2.131,-1.013,-2.006, 0.521,-0.075, 0.673, 0.887, 0.788,-0.625, 1.244,-1.136, 0.169,-2.216,-0.466, 2.506, 0.589, 0.144,-0.531, 0.329,-0.915,-0.354, 0.738,-0.950, 1.734,-0.411, 0.819,-0.478, 0.278, 0.234,-1.244, 0.589, 0.978, 0.225, 0.482,-0.731,-0.916,-0.305,-0.677, 0.075, 1.271, 0.600, 0.309, 0.931,-0.026,-0.139,-0.102, 2.542, 0.383,-0.747,-1.873, 0.322,-0.408,-0.300, 1.780, 0.128,-0.454, 1.718,-0.535,-0.352,-0.043,-1.024,-1.132,-0.720,-2.773, 0.960,-1.924, 0.782,-1.635, 0.561,-1.081,-1.480,-0.227, 1.647, 0.254,-0.405,-0.574, 0.594, 2.285,-1.493,-1.234,-0.182, 2.502, 1.738, 0.088,-1.297, 0.038,-2.052,-0.111, 0.749, 0.419,-0.396,-0.172, 1.078, 0.890,-0.516, 1.578, 0.713,-0.331, 0.560,-1.554,-0.908,-1.190,-1.313, 1.242,-0.132, 1.928,-1.296,-0.918, 1.104,-0.919, 0.565,-0.308,-0.290, 0.113,-1.034,-0.126,-0.947, 1.848, 2.136,-0.342, 0.172, 1.074,-0.563,-1.460, 0.892,-0.783, 0.220,-0.569,-1.620, 1.720, 0.842,-1.462,-1.235,-1.372, 0.196,-1.487, 1.067, 0.763, 0.838,-1.146, 0.394,-0.828,-0.279, 1.479, 0.742, 0.892, 1.272,-0.293,-0.341,-0.853, 1.172, 0.224,-0.315,-0.018,-1.576,-1.782, 1.875, 0.005,-0.820, 0.597,-0.814,-0.250,-2.781,-0.092, 1.309, 0.231,-0.266,-0.181,-0.608,-0.795,-0.303,-0.668, 0.303,-1.198, 0.771,-1.295,-2.321, 0.229, 0.105,-1.426,-0.248, 0.033,-0.425,-0.637,-0.998, 0.321,-0.407,-0.541, 0.170,-0.272, 1.177, 0.720, 1.054,-0.559,-0.984,-2.245,-0.814,-1.115,-0.477, 1.395, 0.393, 0.263, 0.403,-0.300,-0.038, 1.095, 1.004, 1.055, 0.569,-0.597,-1.296, 0.048, 0.838,-0.482, 0.268,-0.015,-1.616,-1.225, 0.476,-0.224, 0.141,-1.571,-0.293, 0.703, 0.342, 0.431,-0.024, 1.152,-1.599, 1.144,-1.376, 0.480,-1.274,-1.213,-0.156, 0.197, 1.014,-0.410,-0.261,-0.162,-0.328, 1.824, 1.287, 0.806, 0.707, 1.197,-0.462,-2.454,-1.993,-0.071,-1.448, 0.836,-1.036,-0.865, 0.968, 0.078,-1.794, 0.030,-0.789, 0.157,-0.757,-0.551,-0.149, 0.497, 0.846, 1.167, 0.231,-0.360, 0.567, 1.024, 1.918, 0.186,-0.841, 0.462, 1.273,-1.025, 0.570, 0.611, 1.304, 1.247, 0.929, 1.267,-0.607, 0.955, 1.645,-0.141,-1.924,-0.598,-1.220,-1.819, 1.081, 0.919, 1.373, 0.376,-0.037,-0.036, 0.586, 1.536,-0.346, 0.833, 0.268, 1.049,-1.581,-0.163,-0.011,-1.260, 1.846,-1.631,-1.014, 1.467, 0.737, 0.744, 0.782,-1.681, 0.980,-0.503,-0.965,-0.963, 1.351,-1.164, 0.383,-0.471, 0.889, 1.262,-1.091, 0.026, 2.442, 0.104, 0.844,-0.157, 0.364, 0.250,-0.687, 0.405,-0.285,-0.927, 0.574, 1.827,-0.831,-0.941, 0.772, 0.366, 1.206,-2.665, 1.185,-0.135, 1.165,-0.457, 0.313, 0.644,-1.339,-0.229, 0.643,-0.717,-0.809, 1.349,-0.647,-1.451, 0.599, 0.110,-2.084,-0.861,-0.183, 0.817, 0.000,-0.058, 0.680,-0.211, 0.128, 0.418,-0.601, 2.045, 0.476, 0.349,-0.947, 0.635, 0.058, 0.156,-0.354, 1.096,-1.004, 0.992,-0.740,-0.660,-1.479, 0.240,-0.271,-0.525, 0.205,-2.116, 0.935, 0.088,-1.196, 0.084,-1.135, 0.725, 1.298, 0.210, 1.250,-0.520, 0.639,-0.007,-0.135,-0.245,-0.779, 0.333, 0.877, 0.602, 0.422, 0.553, 1.882,-0.189,-0.031,-0.703, 0.251, 0.633, 0.247,-2.429,-0.364,-0.471, 0.817, 0.448, 0.843,-1.305,-0.076,-1.182,-0.703,-0.631,-0.272,-0.933,-0.685, 0.807, 0.934,-0.202,-0.400, 0.801, 0.424, 1.216, 0.286, 1.461, 0.898,-0.255,-0.117,-1.256, 0.663, 0.764,-0.890, 0.679, 1.934,-1.249, 0.779,-0.656, 0.169,-0.182,-0.157,-0.308, 0.136,-1.609,-0.037, 0.618,-0.344, 1.011, 1.463,-0.075,-0.648, 0.437,-0.083, 0.745, 0.809, 1.276, 0.758,-0.314,-1.652,-1.481, 0.291, 1.505,-0.845, 1.652, 0.919,-0.386, 1.870, 0.191,-1.632,-0.228, 1.851, 0.083, 1.109, 0.103,-2.046, 0.028,-0.047,-0.419, 1.728, 0.212,-0.640, 0.419,-0.236,-1.735, 0.233,-0.287,-0.181,-1.589, 1.404,-0.479, 3.469,-0.884,-0.392,-0.131,-1.486,-0.385, 1.085, 1.880,-0.298,-0.102,-1.059,-0.532,-0.054,-0.027,-0.606,-0.901, 0.706,-0.648, 0.323,-0.013, 0.883, 1.249,-0.042,-0.541, 0.441, 0.304,-1.267,-1.630, 2.140, 1.293, 0.042,-0.799,-0.949, 0.313, 0.758, 1.012, 1.632,-1.641,-0.703, 0.526,-0.056, 0.166,-0.136,-0.072,-0.347, 0.073, 0.413,-1.180,-0.251, 0.723,-1.488,-0.117,-1.799, 0.730, 1.218, 0.697,-1.044};
    }
    else if(pdg.compare("expskin") == 0){	 
      return {0.631,-0.270,-1.503,-0.013,-0.346, 0.383, 0.424, 0.683, 1.131, 0.328,-1.288, 0.300,-1.821,-1.324,-0.600, 0.161, 0.685,-0.874,-1.824,-0.321, 1.278,-0.261, 0.075,-0.083,-0.470, 0.128, 0.416,-1.005,-0.918,-0.097, 1.199, 1.094, 1.195,-0.931,-1.702,-0.077, 0.099,-1.405, 0.240, 1.685, 0.735, 2.068,-2.627, 0.053, 0.411,-0.312,-0.586,-0.580, 0.943, 0.239,-1.285, 0.442,-1.373, 0.034,-0.536,-0.866, 1.082, 1.429,-1.903, 0.935,-0.406, 0.327,-2.443,-1.158,-0.105,-0.614, 0.933, 0.898, 1.223,-0.264, 0.687, 0.387, 1.360, 0.400,-1.004,-2.421, 0.532, 0.015, 0.275, 0.433, 0.663,-0.253, 0.771,-0.172,-0.259,-1.599,-1.472, 0.286, 1.436,-1.836, 0.119,-0.732,-1.779, 0.241,-0.387, 1.045,-0.334,-0.260, 1.365,-0.353,-0.491,-0.284,-0.708,-0.206,-0.498,-0.804, 1.647, 1.001,-0.050,-1.311, 0.467, 0.350, 2.376, 0.643, 0.176, 0.638, 1.426, 0.370,-2.369,-0.078,-0.210,-1.515, 1.048,-0.413,-1.064,-1.133,-0.732, 1.447, 1.649, 0.517, 1.097, 0.902,-1.445,-1.356,-0.300,-0.659,-0.092, 0.747, 0.038,-1.761,-0.820, 0.015,-0.757,-0.531, 1.522,-1.127,-0.829,-1.233,-0.643, 0.565,-0.427,-0.176,-1.453,-0.010, 1.331,-0.299,-0.772,-0.176, 0.078,-1.114, 0.422,-0.048,-0.449,-1.175, 0.947,-0.632, 0.024, 0.093,-0.718,-1.814,-0.011, 1.266, 0.020,-1.127,-1.202, 0.338,-1.078,-1.314,-0.870,-1.089, 0.440,-0.663, 0.273,-0.319,-0.544,-0.569,-0.041,-0.423,-0.858,-0.905,-0.623, 0.856,-0.243,-0.619,-0.619, 1.349,-0.382, 0.435, 0.068, 1.078,-0.501, 2.104,-0.654, 1.313, 0.434,-0.147, 1.132,-0.077,-0.303,-0.955, 0.253, 0.086, 1.428, 0.211,-1.211, 0.006, 0.271,-0.554, 0.390, 2.587,-0.415,-0.508, 1.115, 0.692,-0.661,-0.386, 0.257,-0.342,-0.762,-0.185, 0.746,-0.485, 0.798, 2.165,-0.682,-0.263,-0.809,-0.037, 0.124,-0.040,-0.007,-1.168, 0.237,-1.976,-1.033, 0.593, 2.035,-0.962, 0.880, 1.556,-0.550,-0.252,-0.145, 0.325,-1.127, 2.265,-0.722,-1.793,-0.037,-1.274, 0.215, 0.528,-1.004, 1.003,-0.675,-0.445, 0.068,-0.459,-0.190, 0.376, 0.847,-0.886, 1.215, 1.811,-1.644, 0.279, 0.995, 1.117,-3.207,-1.036,-0.330, 0.114, 0.439, 1.099, 1.063,-0.360,-1.641, 0.868,-1.565,-0.081,-1.359, 0.290, 0.369,-1.036,-1.212, 1.019,-0.208, 1.608,-0.683, 0.027, 0.944, 1.141, 0.930,-0.038,-0.531, 0.688, 1.094, 0.602,-0.205,-2.156, 0.759, 0.313,-0.206,-0.876, 0.445,-0.211, 0.749, 0.295,-0.643,-0.016,-0.671, 0.091,-0.884, 0.696,-0.157, 0.204, 1.412,-0.200, 0.516,-0.315, 1.153, 0.032,-0.271, 1.029,-0.309, 1.027, 0.927,-0.719, 0.398,-0.384, 0.525, 1.428,-0.762,-1.596, 0.712, 0.458, 0.486,-0.334,-0.353, 2.945, 0.029,-0.878, 0.254,-1.056, 1.841, 1.585,-1.746, 1.324, 0.928,-0.157,-0.520,-0.453, 1.887, 1.586,-1.343,-0.343,-0.368,-1.752,-0.354, 1.944, 1.828,-0.723, 0.313,-0.471, 0.736,-0.480,-1.145, 0.795,-1.169, 0.255,-0.355,-1.703,-0.205, 0.472, 0.399, 0.891, 0.585,-1.549,-0.588,-0.162, 0.194, 0.894, 0.484, 0.625,-0.334,-0.141, 0.361, 1.380,-1.027, 1.221, 3.165, 2.406,-1.881, 0.407,-0.731,-1.835,-0.284, 0.510, 0.949,-0.532,-0.408,-2.283,-1.470,-0.594,-1.714, 1.810, 0.729, 0.543, 0.137,-0.793,-2.886, 0.683, 1.212, 1.089,-0.653, 0.703,-0.143,-0.185,-0.391, 0.549,-2.353,-1.148,-0.284,-0.327, 0.639,-1.834,-0.957,-0.474,-0.169,-2.271,-0.482,-0.035,-0.621, 0.393,-0.890,-0.381, 1.427, 0.982, 0.913,-1.921,-0.365,-0.411,-0.692, 0.669, 1.065, 0.709,-2.818, 0.174,-0.539, 0.727,-0.857,-0.218, 1.976,-1.137,-0.521,-0.062, 0.791, 1.804,-0.743, 0.155,-0.565, 0.283, 1.442,-0.144,-0.290,-1.358,-0.123,-0.934, 0.294, 0.805, 0.269,-1.297, 0.720,-0.454, 0.374, 0.179, 0.259,-0.428, 0.886,-1.165,-0.569, 1.155, 0.026, 1.220, 1.250,-0.745, 0.083, 0.408,-1.677, 0.223,-0.459, 0.931,-1.244,-1.575,-0.232, 2.250,-0.911,-1.334, 0.442, 1.915, 1.184,-0.862,-0.516,-2.417,-1.342, 0.399,-0.801, 1.075,-0.647,-0.047,-0.855, 1.140,-1.209, 0.493,-1.265,-0.413,-0.075,-0.755,-0.598, 0.826,-0.259, 0.638,-0.094,-0.843, 0.354, 1.905, 0.635,-0.679, 0.124,-1.498, 1.075, 0.433, 0.169,-0.178,-2.156, 0.637, 0.280, 0.875, 2.287, 0.462, 0.619,-1.663, 1.725,-0.266,-0.889, 2.174, 0.334,-0.098, 0.021, 0.649, 1.029,-0.540,-0.329,-0.700, 0.229,-0.336,-1.147,-0.744, 0.016, 0.436,-1.548, 1.868, 0.034,-0.087,-0.442,-0.578,-0.634, 0.012,-0.079, 0.144,-0.028, 0.814, 0.297, 0.687, 0.110, 0.331, 0.650,-0.921,-2.105, 0.814,-0.011,-0.141,-0.383, 0.338, 0.434, 0.388, 1.669,-0.619, 0.430,-0.789,-0.413,-0.109, 3.587, 0.275,-0.807,-2.316,-0.704,-1.160, 0.121,-0.753, 0.241, 0.655,-0.522,-1.327,-0.315, 0.758, 0.337,-0.114,-0.042, 1.170,-0.990, 0.840, 1.068, 0.115, 0.776,-0.645,-0.574, 1.094, 1.038, 0.034, 0.612,-1.262, 0.431, 1.310, 2.769, 2.222, 0.081,-0.517, 0.089, 0.481,-0.772,-1.988,-1.003, 0.429,-2.181, 1.673,-0.171, 1.205,-0.653,-1.116,-0.708, 0.427, 2.740, 0.299, 0.559,-0.410,-0.602, 1.866, 0.948, 1.265,-0.043,-0.535, 0.575,-0.683, 1.442,-0.920,-2.347,-0.028, 0.156, 1.212,-1.045,-0.322,-0.519, 1.103,-0.325, 1.125,-1.402,-0.935,-0.242,-0.035,-0.746,-0.103,-1.798,-0.960,-0.070,-2.500, 0.561, 0.778,-1.702,-1.045, 0.037,-0.222,-0.294, 0.765,-0.853, 0.947,-0.094,-2.074, 1.250, 1.295, 1.442,-0.704, 0.357, 1.007, 1.098,-0.801,-0.540, 1.187,-0.946, 0.499, 1.148,-0.162,-0.250,-0.523,-1.422,-0.074,-1.080, 0.917,-0.138,-0.229,-1.144,-0.525,-1.261, 0.817, 0.579,-0.095, 1.362,-1.130,-0.235, 1.458,-0.212, 0.430,-0.512, 1.535, 0.411,-1.320,-0.083, 0.457, 0.074,-1.270, 0.019, 0.069,-0.302,-1.143,-1.319,-0.937, 1.771, 0.623, 0.817,-0.340, 1.822,-0.188, 1.962, 1.089, 1.483,-0.484, 0.207, 0.668,-0.783,-0.130,-0.005,-1.230,-0.179, 0.563,-0.132, 0.461, 0.380,-0.550,-0.835,-0.626,-2.184, 0.220,-0.451, 0.742, 0.655,-2.075,-0.411,-0.341,-0.701, 0.901,-1.462,-2.668, 0.508, 0.478, 0.605, 0.448,-0.457, 0.169, 0.641, 0.494, 1.557,-1.090, 1.216, 0.555, 0.400,-0.438, 1.847,-0.234,-0.640,-0.757,-1.219,-0.182, 0.397, 0.247,-0.262, 0.876,-0.782, 0.358, 0.788, 1.979,-0.152, 0.926, 1.482,-0.633, 0.826,-0.547, 0.278, 0.310,-1.311,-1.341,-0.236, 0.007, 1.083, 1.094,-0.697, 0.426, 1.237, 0.154, 2.249,-0.216, 0.598, 0.074,-0.643,-1.276, 0.724, 0.964, 0.799,-0.635, 1.503, 0.133,-0.171, 2.367, 0.205,-0.007, 0.360, 0.647,-1.178,-0.093,-2.002,-0.069,-1.096,-0.444,-0.072, 0.037, 1.202,-0.920,-1.539, 1.936,-0.366,-1.323, 0.817, 0.176,-0.021,-1.322,-1.046, 0.158, 1.130,-0.930,-0.513, 0.061,-0.729, 0.204, 0.058, 0.005,-0.038,-0.050,-0.466,-0.204,-0.374, 0.755, 0.987,-1.072,-0.110,-2.496, 1.045,-0.286,-0.270, 0.310,-0.324,-0.149,-0.030,-0.755, 1.180, 0.874,-1.516, 0.007, 0.089, 1.029,-1.211, 1.114, 0.296, 0.102, 0.148, 3.168,-0.877,-0.183, 1.683, 0.062, 0.813, 0.557, 1.815, 0.346, 1.102,-0.680,-1.016,-1.041, 0.337,-0.403, 0.114, 0.444, 0.173,-1.610,-0.434, 0.786, 1.210, 0.615,-1.344,-0.355, 1.699, 0.404, 0.713, 0.413, 0.904, 0.131, 1.372,-0.218,-0.095, 1.684,-0.032,-2.050,-1.572, 0.032,-0.740,-0.392,-0.073, 0.868, 0.881, 0.323, 0.457, 0.472, 1.003, 0.170, 1.439,-1.115,-1.132,-1.401, 0.868, 0.850,-0.180,-0.297,-1.281, 0.084, 2.068,-1.727,-1.711, 1.620, 0.512, 2.370, 0.367, 0.288,-0.594,-1.078, 0.046,-0.560, 1.637,-1.540, 1.675, 0.295,-0.338,-0.878,-2.221, 0.435,-0.191,-1.181, 2.160, 0.432,-1.955, 0.894,-1.506,-1.949,-0.460,-1.573,-0.601, 0.732, 1.225,-1.428, 0.705,-0.138, 1.473,-0.585};
    }
    else{      
      throw std::invalid_argument("Beam Unisim MiniBooNE random numbers are not configured for " + pdg);	  	
    }
    
 }

    
  REGISTER_WEIGHTCALC(FluxUnisimWeightCalc)
}
